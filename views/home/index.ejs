<!DOCTYPE html>
<html>

<head>
  <meta charset="utf-8">
  <title>Knowledge Base</title>
  <style>
    /* Text Area */
    form textarea {
      width: 480px;
      transform: translatex(157px) translatey(83px);
      top: -35px;
    }

    /* Input */
    form input[type=file] {
      width: 163px !important;
    }


    #player {
      display: inline-block;
      width: 39%;
      position: relative;
      left: 13px;
    }

    @media (max-width:768px) {

      /* Player */
      #player {
        margin-right: 22px;
        width: 498px;
      }

    }

    @media (min-width:768px) {

      /* Player */
      #player {
        width: 690px;
        margin-bottom: 0px;
        top: 19px;
        left: 20px;
        margin-right: 6px;
      }

      /* Image */
      /* img{
  display:inline-block;
  transform:translatex(23px) translatey(22px);
 } */

      /* Heading */
      h1 {
        width: 84%;
        transform: translatex(23px) translatey(30px);
      }

    }

    body {
      font-family: 'Open Sans', sans-serif;
      margin: 0;
      padding: 0;
      background-color: #f1f1f1;
    }

    header {
      background-color: #0c2461;
      color: #fff;
      padding: 20px;
      text-align: center;
    }

    main {
      max-width: 800px;
      margin: 0 auto;
      padding: 20px;
      background-color: #fff;
      box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);
    }

    h1 {
      font-size: 24px;
      margin-top: 0;
    }

    img {
      max-width: 100%;
      margin-bottom: 20px;
    }

    iframe {
      width: 100%;
      height: 400px;
      margin-bottom: 20px;
    }

    form {
      display: flex;
      flex-direction: column;
      margin-bottom: 20px;
    }

    input[type="number"] {
      padding: 10px;
      border-radius: 4px;
      border: none;
      margin-bottom: 10px;
      font-size: 16px;
      outline: none;
    }

    button[type="submit"],
    button {
      padding: 10px;
      border-radius: 4px;
      border: none;
      margin-bottom: 10px;
      font-size: 16px;
      color: #fff;
      background-color: #0c2461;
      cursor: pointer;
      transition: background-color 0.3s ease;
    }

    button[type="submit"]:hover,
    button:hover {
      background-color: #084174;
    }

    label {
      font-size: 16px;
      margin-bottom: 10px;
    }

    input[type="text"] {
      padding: 10px;
      border-radius: 4px;
      border: none;
      margin-bottom: 10px;
      font-size: 16px;
      outline: none;
    }

    hr {
      margin: 20px 0;
      border: none;
      border-top: 1px solid #f1f1f1;
    }

    textarea {
      border: 1px solid #ccc;
      font-size: 14px;
      font-family: "Times New Roman", Times, serif;
      padding: 10px;
      margin-bottom: 20px;
      line-height: 1.5;
      width: 100%;
      height: 400px;
    }

    textarea {
      /* Adjust the size of the text area */
      width: 25%;
      height: 200px;

      /* Add padding and border */
      padding: 10px;
      border: 1px solid #ccc;

      /* Customize the font */
      font-family: Arial, sans-serif;
      font-size: 16px;

      /* Customize the background and text color */
      background-color: #fff;
      color: #333;

      /* Add a resize handle to the bottom right corner */
      resize: both;
      overflow: auto;

      /* Add a box shadow for a 3D effect */
      box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.1);
    }

    /* Text Area */
    textarea {
      transform: translatex(263px) translatey(73px);
      min-height: 546px;
      height: 750px;
      width: 29%;
      position: relative;
      left: -23px;
      top: -21px;
    }

    /* Button */
    #speakerForm button {
      width: 22%;
      transform: translatex(314px) translatey(-49px);
      position: relative;
      left: 6px;
    }

    /* Speaker count */
    #speakerCount {
      width: 269px;
      border-style: solid;
      border-width: 1px;
      border-color: #a69f9f;
      transform: translatex(23px) translatey(0px);
      position: relative;
      left: 2px;
    }

    /* Speaker form */
    #speakerForm {
      transform: translatex(-15px) translatey(-307px);
      width: 38%;
      height: 54px;
      position: relative;
      top: -21px;
    }

    /* Num speakers */
    #numSpeakers {
      border-width: 1px;
      border-color: #b1aeae;
      margin-bottom: 1px;
      border-style: solid;
      width: 29px;
      position: relative;
      left: 14px;
      transform: translatex(-165px) translatey(30px);
      top: -365px;
    }

    /* Heading */
    h1 {
      font-family: Arial, 'Helvetica Neue', Helvetica, sans-serif;
      font-weight: 500;
      line-height: 1.13em;
      border-left-width: 1px;
    }

    /* Image */
    img {
      display: inline-block;
      transform: translatex(585px) translatey(-225px);
      width: 120px;
      max-width: 120px;
      border-width: 3px;
      border-color: #1abc9c;
      border-top-left-radius: 0px;
      border-top-right-radius: 0px;
      border-bottom-left-radius: 0px;
      border-bottom-right-radius: 0px;
      position: relative;
      top: 2px;
      left: -2px;
      background-color: #faf9f9;
      box-shadow: -3px 0px 3px 2px #d5d1d1;
    }

    /* Heading */
    h1:nth-child(1) {
      position: relative;
      top: 16px;
    }

    /* Create buttons button */
    #createButtonsButton {
      position: relative;
      left: 22px;
      transform: translatex(-173px) translatey(-318px);
      top: -17px;
      width: 143px;
    }

    /* Label */
    label {
      position: relative;
      left: 12px;
      top: -371px;
      width: 158px;
      margin-bottom: 2px;
    }

    /* Heading */
    h1:nth-child(7) {
      position: relative;
      top: -3px;
    }

    @media (min-width:768px) {

      /* Heading */
      h1 {
        width: 497px;
      }

      /* Player */
      #player {
        left: -113px;
        top: -340px;
        position: relative;
      }

      /* Heading */
      h1:nth-child(1) {
        width: 685px;
      }

      /* Heading */
      h1:nth-child(7) {
        width: 329px;
        transform: translatex(11px) translatey(-318px);
      }

    }

    /* Label */
    #buttons div:nth-child(1) label {
      top: -1px !important;
      bottom: auto !important;
      left: -6px;
    }

    /* Division */
    #buttons div:nth-child(1) {
      transform: translatex(4px) translatey(7px);
      display: inline-block;
    }

    /* Buttons */
    #buttons {
      transform: translatex(13px) translatey(-301px);
      position: relative;
      top: -21px;
      left: 8px;
      height: 148px;
      padding-top: 28px;
    }

    /* Division */
    #buttons>div {
      transform: translatex(0px) translatey(7px) !important;
      position: relative;
      top: -23px;
    }

    /* Label */
    #buttons div>label {
      top: -337px !important;
      bottom: auto !important;
    }

    /* Label */
    #buttons div:nth-child(3) label {
      top: 0px !important;
      bottom: auto !important;
      left: -4px;
      line-height: 22px;
    }

    /* Label */
    #buttons div>label {
      top: 0px !important;
      left: 0px !important;
    }

    /* Buttons */
    #buttons {
      min-height: 671px;
      transform: translatex(3px) translatey(-312px);
      height: 671px;
      width: 55%;
    }

    /* Division */
    #buttons div:nth-child(3) {
      top: -52px;
    }

    /* Division */
    #buttons div:nth-child(5) {
      top: -81px;
    }

    /* Division */
    #buttons div:nth-child(7) {
      top: -111px;
    }

    /* Division */
    #buttons div:nth-child(9) {
      top: -148px;
    }

    /* Textarea */
    #my-textarea {
      transform: translatex(121px) translatey(41px);
      width: 446px;
      padding-right: 0px;
    }

    /* Image */
    img {
      top: 380px;
    }

    /* Heading */
    h1 {
      top: -491px !important;
      bottom: auto !important;
    }

    /* Speaker form */
    #speakerForm {
      transform: translatex(5px) translatey(-795px);
      width: 526px;
    }

    /* Speaker count */
    #speakerCount {
      left: -15px;
    }

    /* Button */
    #speakerForm button {
      left: -9px;
    }

    /* Label */
    label {
      top: -865px;
    }

    /* Create buttons button */
    #createButtonsButton {
      top: -895px;
      transform: translatex(-173px) translatey(67px);
    }

    /* Num speakers */
    #numSpeakers {
      transform: translatex(-163px) translatey(-463px);
      top: -366px;
      left: 12px;
    }

    /* Buttons */
    #buttons {
      transform: translatex(-3px) translatey(-807px);
    }

    /* Button */
    #my-form button {
      width: 16%;
      position: relative;
      left: -385px;
      transform: translatex(487px) translatey(8px);
    }

    /* Body */
    body {
      height: 1401px;
    }

    /* Form */
    #my-form {
      transform: translatex(1060px) translatey(-387px);
      width: 563px;
      position: relative;
      left: 2px;
    }

    /* Heading */
    h1:nth-child(1) {
      top: -3px !important;
    }

    /* Player */
    #player {
      border-color: #0a0909;
      border-width: 1px;
    }

    @media (min-width:768px) {

      /* Player */
      #player {
        top: 38px;
      }

      /* Form Division */
      form {
        transform: translatex(649px) translatey(-489px);
        position: relative;
        right: -123px;
      }

      /* Speaker count */
      #speakerCount {
        transform: translatex(-828px) translatey(-357px);
        left: 67px;
        position: relative;
        top: 20px;
      }

      /* Button */
      #speakerForm button {
        transform: translatex(-452px) translatey(-389px);
      }



      /* File name */
      #fileName {
        width: 240px;
        transform: translatex(240px) translatey(48px);
      }

      /* Buttons */
      #buttons {
        transform: translatex(-3px) translatey(-783px);
        width: 647px;
        top: -38px;
      }

      /* File */
      #myFile {
        width: 28%;
        position: relative;
        left: 8px;
        transform: translatex(236px) translatey(38px);
        top: 3px;
      }

      /* Speaker form */
      #speakerForm {
        transform: translatex(649px) translatey(-489px) !important;
      }

      /* Body */
      body {
        width: 60%;
      }

      /* Form Division */
      form:nth-child(6) {
        width: 808px;
        transform: translatex(1057px) translatey(-439px);
      }

      /* Text */
      #text {
        width: 480px !important;
        padding-left: 11px;
        padding-right: 20px;
      }

      /* Heading */
      h1:nth-child(7) {
        top: -501px !important;
        bottom: auto !important;
      }

      @media (min-width:768px) {

        /* Heading */
        h1:nth-child(7) {
          transform: translatex(11px) translatey(-345px);
        }

      }
    }

    @media (min-width:768px) {



      /* File */
      #myFile {
        width: 250px;
      }

    }

    .form-card {
      width: 25rem;
      gap: 1rem;
      background-color: #ffffff;
      border-radius: 0.3rem;
      padding: 1.5rem;
    }

    /* Text */
    #text {
      background-color: #d8e6f2;
      color: #0f0f0f;
      font-style: normal;
      box-shadow: -4px 1px 9px 2px rgba(18, 17, 17, 0.1);
      border-style: solid;
      border-color: #9d9494;
    }

    /* Form Division */
    form {
      background-color: transparent;
    }

    /* File */
    #myFile {
      min-height: 24px;
      font-size: 17px;
      background-color: transparent;
    }

    /* Save */
    #saveBtn {
      width: 7%;
      position: relative;
      left: 9px;
      transform: translatex(236px) translatey(38px);
    }

    /* Save */
    #saveBtn {
      font-size: 17px;
      background-color: #0c2461;
      color: #ffffff;
      border-top-right-radius: 6px;
      border-top-left-radius: 6px;
      border-bottom-left-radius: 6px;
      border-bottom-right-radius: 6px;
      top: 2px;
    }

    /* Save */
    #saveBtn {
      width: 150px;
    }

    /* Save */
    #saveBtn {
      width: 128px;
    }



    /* Button */
    #speakerForm button {
      background-color: #0c2461;
    }

    @media (min-width:768px) {

      /* File */
      #myFile {
        top: 5px;
        width: 314px;
      }



      body {
        width: 2047px;
      }

      /* Form Division */
      form {
        width: 35% !important;
        left: 173px !important;
      }

      /* Form Division */
      form:nth-child(6) {
        left: 158px;
        width: 38% !important;
      }

      /* Text */
      #text {
        left: -142px;
      }

      /* Form Division */
      form:nth-child(7) {
        left: 177px !important;
      }

      /* Heading */
      h1 {
        left: 28px;
        top: -2px !important;
        bottom: auto !important;
        margin-bottom: 10px;
      }

      /* Create buttons button */
      #createButtonsButton {
        transform: translatex(-126px) translatey(-901px);
        left: 29px;
      }

      /* Label */
      label {
        display: inline-block;
        height: 46px;
        transform: translatex(35px) translatey(-976px);
      }

      /* Num speakers */
      #numSpeakers {
        transform: translatex(-122px) translatey(-1426px);
        left: 7px;
        top: -370px;
      }

      /* Image */
      img {
        left: 31px;
      }

      /* Label */
      #buttons div:nth-child(3) label {
        transform: translatex(-4px) translatey(-20px);
        left: 11px !important;
        right: auto !important;
        top: 11px !important;
        bottom: auto !important;
      }

      /* Label */
      #buttons div:nth-child(1) label {
        transform: translatex(12px) translatey(-11px);
      }

      /* Heading */
      h1:nth-child(8) {
        min-height: 36px;
        height: 36px;
      }

      @media (min-width:768px) {

        /* Form Division */
        form {
          right: auto !important;
        }

        /* Form Division */
        form:nth-child(6) {
          transform: translatex(1299px) translatey(-394px);
        }

        /* Form Division */
        form:nth-child(7) {
          transform: translatex(579px) translatey(-1299px);
          right: auto !important;
        }

        /* Speaker count */
        #speakerCount {
          transform: translatex(-842px) translatey(-1303px);
        }

        /* Button */
        #speakerForm button {
          transform: translatex(-452px) translatey(-1331px);
        }

        /* Player */
        #player {
          left: -77px;
        }

        /* Buttons */
        #buttons {
          transform: translatex(39px) translatey(-1761px);
          top: -41px;
        }

        /* Heading */
        h1:nth-child(8) {
          transform: translatex(47px) translatey(-1777px);
          width: 324px;
        }

        /* Body */
        body {
          width: 2122px;
        }

      }
    }

    @media (min-width:768px) {

      /* Create buttons button */
      #createButtonsButton {
        transform: translatex(27px) translatey(-934px);
      }

      /* Num speakers */
      #numSpeakers {
        transform: translatex(36px) translatey(-1462px);
      }

      /* Form Division */
      form {
        transform: translatex(675px) translatey(-830px) !important;
      }

      /* Form Division */
      form:nth-child(7) {
        transform: translatex(1403px) translatey(-400px) !important;
      }

      /* Form Division */
      form:nth-child(9) {
        transform: translatex(623px) translatey(-1385px) !important;
      }

    }

    /* Text */
    #text {
      background-color: #ccdeef;
    }

    /* Form Division */
    form {
      top: -8px !important;
    }

    /* Form Division */
    form:nth-child(7) {
      top: -36px !important;
      bottom: auto !important;
    }

    /* Input */
    form input {
      width: 22% !important;
      transform: translatex(134px) translatey(39px) !important;
      font-size: 17px !important;
    }

    /* Input */
    form:nth-child(9) input:nth-child(3) {
      background-color: #0f355b;
      color: #f9f9f9;
    }

    /* Speaker count */
    #speakerCount {
      display: none;
    }

    /* Button */
    #speakerForm button {
      display: none;
    }

    @media (min-width:768px) {

      /* File */
      #myFile {
        transform: translatex(4px) translatey(39px);
        left: 11px;
        width: 43% !important;
      }

      /* File name */
      #fileName {
        transform: translatex(4px) translatey(39px);
      }

      /* Buttons */
      #buttons {
        transform: translatex(32px) translatey(-1883px);
      }

      /* Speaker count */
      #speakerCount {
        transform: translatex(-835px) translatey(-1313px) !important;
      }

      /* Button */
      #speakerForm button {
        transform: translatex(-835px) translatey(-1313px);
      }

      /* Heading */
      h1 {
        position: relative;
        top: 10px !important;
        bottom: auto !important;
      }

      /* Create buttons button */
      #createButtonsButton {
        transform: translatex(33px) translatey(-1045px);
      }

      /* Num speakers */
      #numSpeakers {
        transform: translatex(40px) translatey(-1572px);
      }

    }

    /* Heading */
    h1 {
      padding-bottom: 15px;
      height: 26px;
    }

    /* Buttons */
    #buttons {
      left: 55px;
    }

    /* Form Division */
    form {
      top: -18px !important;
      bottom: auto !important;
    }

    @media (min-width:768px) {

      body {
        width: 2347px;
      }

      /* Form Division */
      form {
        transform: translatex(612px) translatey(-384px) !important;
        width: 892px !important;
      }

      /* Form Division */
      form:nth-child(8) {
        left: 168px !important;
        right: auto !important;
        transform: translatex(1155px) translatey(-1348px) !important;
      }

      /* Heading */
      h1 {
        top: -200px !important;
        transform: translatex(16px) translatey(-1651px) !important;
        bottom: auto !important;
      }

    }

    #Qbtn,
    #Abtn {
      position: fixed;
      bottom: 10px;
      right: 10px;
      display: none;
    }

    .tag-btn {
      position: absolute;
      display: none;
    }

    /* Qbtn */

    /* Abtn */
    #Abtn {
      height: 50px;
      width: 80px;
      transform: translatex(-531px) translatey(14px);
    }

    /* Qbtn */
    #Qbtn {
      top: 23px !important;
      bottom: auto !important;

      left: -1px !important;
      right: auto !important;
      height: 50px;
      transform: translatex(1319px) translatey(134px);
      width: 80px;



    }

    /* Abtn */
    #Abtn {
      top: 1000px !important;
      bottom: -158px;
      left: -101px !important;
      right: -173px;
      max-width: 24px;
      min-width: 99px;
      transform: translatex(1419px) translatey(-790px);
      width: 931px;
    }

    .tag {
      font-size: 0.8em;
      font-weight: bold;
    }

    /* Tag */
    textarea#text .tag {
      position: relative;
      top: -6px;
    }

    #editor {
      height: 200px;
      width: 500px;
      border: 1px solid black;
      padding: 10px;
    }

    /* Tag btn2 */
    .tag-btn2 {
      transform: translatex(1208px) translatey(-3116px);
      position: relative;
      top: -45px !important;
      bottom: auto !important;
      min-width: 66px;
      width: 66px !important;
      min-height: 56px;
    }

    /* Tag btn2 */
    .tag-btn2:nth-child(18) {
      transform: translatex(1266px) translatey(-3077px);
      top: 4px;
    }

    /* Tag btn2 */
    .tag-btn2:nth-child(19) {
      transform: translatex(1201px) translatey(-3023px);
      left: -5px;
      top: -40px !important;
      bottom: auto !important;
    }

    /* Abtn */
    #Abtn {
      width: 99px;
      max-width: 69px;
      min-width: 80px;
    }

    /* Select location */
    #selectLocation {
      position: relative;
      padding-bottom: 3px;
      left: -600px;
      top: -2230px;
      width: 118px !important;
      /* transform:translatex(-605px) translatey(-459px); */
      /* transform:translatex(-298px) translatey(-463px); */
      transform: translatex(-317px) translatey(-466px);


    }

    /* Hrdware */
    /* #Hrdware-btn{
 transform:translatex(-541px) translatey(-2695px);
} */

    /* Area */
    /* #Area-btn{
 position:relative;
 transform:translatex(-387px) translatey(-1793px);
 left:-31px;
 top:-994px;
} */

    /* Evnt */
    /* #Evnt-btn{ */
    /* position:relative; */
    /* top:-1900px; */
    /* left:416px; */
    /* transform:translatex(-344px) translatey(-843px); */
    /* transform:translatex(-743px) translatey(-1575px);
 position:relative;
 top:-1166px;
 width:100px;
} */

    /* Evnt input */
    /* #Evnt-input{
 transform:translatex(-771px) translatey(-2745px);
 width:98px;
 position:relative;
 left:-23px;
 top:5px;
} */

    /* Area input */
    /* #Area-input{
 transform:translatex(-888px) translatey(-2786px);
 width:98px;
 position:relative;
 left:-27px;
} */

    /* Hrdware input */
    /* #Hrdware-input{
 transform:translatex(-1031px) translatey(3px);
 position:relative;
 top:-2697px;
 width:98px;
 left:-9px;
} */
    .form-container {
      display: flex;
      flex-direction: column;
      align-items: center;
    }

    .form-input {
      display: flex;
      flex-direction: column;
      margin: 10px;
    }

    .form-input label {
      font-size: 14px;
      font-weight: bold;
      margin-bottom: 5px;
    }

    .form-input input[type="text"] {
      width: 200px;
      height: 30px;
      border-radius: 5px;
      border: 1px solid #ccc;
      padding: 5px;
      font-size: 14px;
    }

    .form-select {
      margin: 10px;
    }

    .form-select label {
      font-size: 14px;
      font-weight: bold;
      margin-right: 10px;
    }

    .form-select select {
      width: 100px;
      height: 30px;
      border-radius: 5px;
      border: 1px solid #ccc;
      font-size: 14px;
    }

    .form-submit {
      margin: 10px;
    }

    .form-submit input[type="submit"] {
      width: 100px;
      height: 30px;
      background-color: #4CAF50;
      color: #fff;
      border-radius: 5px;
      border: none;
      cursor: pointer;
      font-size: 14px;
    }

    .form-submit input[type="submit"]:hover {
      background-color: #5d765e;
    }

    .form-label {
      margin-bottom: 5px;
    }

    /* Select location */
    #selectLocation {
      top: 5px;
      left: -328px;
      transform: translatex(462px) translatey(-33px);
      width: 134px !important;
      height: 40px !important;
      border-style: solid !important;
      border-width: 1px !important;
    }

    /* Form */
    #myForm {
      height: 190px;
      padding-left: 24px;
      top: -1991px !important;
      bottom: auto !important;
      border-width: 1px;
      border-style: solid;
      border-color: #8d8181;
      box-shadow: 6px 1px 0px -5px #a29e9e;
      background-color: #d8e2e8;
    }

    /* Button */
    #myForm button {
      width: 22%;
      transform: translatex(258px) translatey(-262px);
      height: 39px !important;
      min-height: 110px;
      box-shadow: 0px 0px 1px 1px #070707;
      position: relative;
      left: 15px;
    }

    /* Label */
    #myForm label {
      left: 34px !important;
      width: 129px;
      top: -878px !important;
      min-height: 28px;
      padding-left: 1px;
    }

    /* Event input */
    #Event-input {
      position: relative;
      top: -17px;
      transform: translatex(143px) translatey(-40px) !important;
      width: 104px !important;
      left: -7px;
      border-style: dotted;
      border-width: 1px;
    }

    /* Hardware input */
    #Hardware-input {
      position: relative;
      top: -1px;
      left: 4px;
      transform: translatex(131px) translatey(-129px) !important;
      width: 104px !important;
      border-style: dotted;
      border-width: 1px;
    }

    /* Label */
    #myForm label:nth-child(3) {
      left: 30px !important;
      right: auto !important;
      top: -877px !important;
      bottom: auto !important;
    }

    /* Area input */
    #Area-input {
      transform: translatex(132px) translatey(-103px) !important;
      position: relative;
      left: 4px;
      width: 104px !important;
      top: 9px;
      border-style: dotted;
      border-width: 1px;
    }

    /* Label */
    #myForm label:nth-child(1) {
      top: -876px !important;
      left: 49px;
      bottom: auto !important;
    }

    /* Label */
    #myForm label:nth-child(7) {
      left: 27px !important;
      right: auto !important;
      top: -889px !important;
      bottom: auto !important;
    }

    /* Label */
    #myForm label:nth-child(5) {
      left: 32px !important;
      right: auto !important;
      top: -872px !important;
      bottom: auto !important;
    }

    /* Text */
    #text {
      height: 576px;
      top: -7px;
      transform: translatex(157px) translatey(7px) !important;
    }

    /* Create buttons button */
    #createButtonsButton {
      top: -893px;
    }

    /* Form Division */
    form {
      top: 19px !important;
      bottom: auto !important;
    }

    /* Form Division */
    form:nth-child(6) {
      top: 6px !important;
      bottom: auto !important;
      height: 770px;
    }

    /* File name */
    #fileName {
      position: relative;
      left: -116px;
      top: -45px;
      border-style: dotted;
      border-width: 1px;
    }

    /* Save */
    #saveBtn {
      left: -12px;
      transform: translatex(32px) translatey(4px) !important;
      width: 150px !important;
      top: -16px;
    }

    /* Text Area */
    form:nth-child(8) textarea {
      left: -65px;
      min-height: 524px;
      height: 639px;
    }

    /* Tag btn2 */
    .tag-btn2 {
      top: -39px !important;
      bottom: auto !important;
      transform: translatex(1224px) translatey(-2896px) !important;
      left: -21px;
    }

    /* Text Area */
    form textarea {
      min-height: 626px !important;
      transform: translatex(118px) translatey(115px) !important;
    }

    /* Qbtn */
    #Qbtn {
      width: 59px;
      left: -14px !important;
      right: auto !important;
      top: -3px !important;
      bottom: auto !important;
      transform: translatex(1323px) translatey(111px);
    }

    /* Abtn */
    #Abtn {
      width: 59px !important;
      max-width: 80px;
      min-width: 59px;
      left: -117px !important;
      right: auto !important;
      transform: translatex(1427px) translatey(-826px);
      top: 995px !important;
      bottom: auto !important;
    }

    /* Tag btn2 */
    .tag-btn2:nth-child(18) {
      width: 59px !important;
      min-width: 53px;
      left: -39px;
    }

    /* Tag btn2 */
    .tag-btn2:nth-child(19) {
      min-width: 52px;
      width: 59px !important;
      transform: translatex(1153px) translatey(-2829px) !important;
      top: -45px !important;
      bottom: auto !important;
      left: -31px;
    }

    /* Input */
    form:nth-child(8) input:nth-child(3) {
      position: relative;
      left: -7px;
      transform: translatex(63px) translatey(56px) !important;
      top: 4px;
    }

    /* Input */
    form:nth-child(8) input[type=file] {
      position: relative;
      top: 27px;
      left: -76px;
      width: 307px !important;
      max-width: 302px;
    }

    /* Input */
    form:nth-child(8) input[type=text] {
      position: relative;
      top: 26px;
      transform: translatex(56px) translatey(40px) !important;
      border-width: 1px;
      border-style: dotted;
    }

    /* Input */
    form input[type=text] {
      border-style: solid;
      border-width: 0px;
    }

    /* Input */
    form input[type=file] {
      width: 160px !important;
      max-width: 242px;
    }

    @media (min-width:768px) {

      /* Form */
      #myForm {
        width: 370px !important;
        left: 136px !important;
        right: auto !important;
        transform: translatex(644px) translatey(-228px) !important;
      }

      /* Label */
      #myForm label {
        transform: translatex(-38px) translatey(823px);
        height: 26px !important;
      }

      /* Label */
      #myForm label:nth-child(5) {
        transform: translatex(-40px) translatey(862px);
      }

      /* Label */
      #myForm label:nth-child(3) {
        transform: translatex(-38px) translatey(903px);
      }

      /* Label */
      #myForm label:nth-child(7) {
        transform: translatex(-34px) translatey(705px);
      }

      /* Buttons */
      #buttons {
        top: 40px;
        transform: translatex(-20px) translatey(-1769px);
      }

      /* Heading */
      h1 {
        top: 5px !important;
        bottom: auto !important;
      }

      /* Num speakers */
      #numSpeakers {
        top: -356px;
        transform: translatex(37px) translatey(-1393px);
      }

      /* Create buttons button */
      #createButtonsButton {
        transform: translatex(22px) translatey(-855px);
      }

      /* Form Division */
      form {
        width: 743px !important;
        transform: translatex(346px) translatey(86px) !important;
      }

      /* Form Division */
      form:nth-child(6) {
        width: 583px !important;
        transform: translatex(602px) translatey(-409px) !important;
      }

      /* File */
      #myFile {
        left: -113px;
        top: -46px;
      }

      /* File name */
      #fileName {
        width: 150px !important;
      }

      /* Label */
      #myForm label:nth-child(1) {
        transform: translatex(-44px) translatey(890px);
      }

    }

    /* Label */
    #myForm label:nth-child(5) {
      left: 36px !important;
      right: auto !important;
    }

    /* Label */
    #myForm label:nth-child(7) {
      left: 30px !important;
      right: auto !important;
    }

    /* Label */
    #myForm label:nth-child(3) {
      top: -873px !important;
      bottom: auto !important;
    }

    @media (min-width:768px) {

      /* Label */
      #myForm label:nth-child(7) {
        transform: translatex(-42px) translatey(799px);
      }

      /* Label */
      #myForm label:nth-child(3) {
        transform: translatex(-40px) translatey(855px);
      }

      /* Label */
      #myForm label:nth-child(5) {
        transform: translatex(-47px) translatey(819px);
      }

    }

    .stream-deck {
      display: grid;
      grid-template-columns: repeat(6, 1fr);
      grid-template-rows: repeat(2, 1fr);
      gap: 10px;
      width: 400px;
      height: 200px;
      background-color: #333;
      border-radius: 10px;
      padding: 10px;
    }

    .stream-deck__key {
      display: flex;
      justify-content: center;
      align-items: center;
      font-size: 30px;
      font-weight: bold;
      background-color: #444;
      color: #fff;
      border-radius: 5px;
      cursor: pointer;
    }

    .stream-deck__key:hover {
      background-color: #555;
    }

    .stream-deck__key--1 {
      grid-column: 1 / span 2;
      grid-row: 1 / span 1;
    }

    .stream-deck__key--2 {
      grid-column: 3 / span 2;
      grid-row: 1 / span 1;
    }

    .stream-deck__key--3 {
      grid-column: 5 / span 2;
      grid-row: 1 / span 1;
    }

    .stream-deck__key--4 {
      grid-column: 1 / span 2;
      grid-row: 2 / span 1;
    }

    .stream-deck__key--5 {
      grid-column: 3 / span 2;
      grid-row: 2 / span 1;
    }

    .stream-deck__key--6 {
      grid-column: 5 / span 2;
      grid-row: 2 / span 1;
    }

    .stream-deck__key--7 {
      grid-column: 1 / span 1;
      grid-row: 1 / span 1;
    }

    .stream-deck__key--8 {
      grid-column: 6 / span 1;
      grid-row: 1 / span 1;
    }

    .stream-deck__key--9 {
      grid-column: 1 / span 1;
      grid-row: 2 / span 1;
    }

    .stream-deck__key--10 {
      grid-column: 6 / span 1;
      grid-row: 2 / span 1;
    }

    .stream-deck__key--11 {
      grid-column: 2 / span 1;
      grid-row: 1 / span 1;
    }

    .stream-deck__key--12 {
      grid-column: 5 / span 1;
      grid-row: 1 / span 1;
    }

    .stream-deck__key__label {
      margin: auto;
    }


    /* Stream deck */
    .stream-deck {
      transform: translatex(101px) translatey(47px);
      min-height: 246px;
      width: 559px;
      position: relative;
      left: -9px;
    }

    /* Stream deck  key */
    .stream-deck .stream-deck__key:nth-child(7) {
      width: 49px;
    }

    /* Stream deck  key */
    .stream-deck .stream-deck__key:nth-child(11) {
      width: 61px;
      transform: translatex(23px) translatey(0px);
    }

    /* Stream deck  key */
    .stream-deck .stream-deck__key:nth-child(1) {
      width: 58px;
      transform: translatex(45px) translatey(3px);
      position: relative;
      left: 10px;
      top: -2px;
    }

    /* Stream deck  key */
    .stream-deck .stream-deck__key:nth-child(2) {
      transform: translatex(0px) translatey(0px);
      width: 82px;
    }

    /* Stream deck  key */
    .stream-deck .stream-deck__key:nth-child(9) {
      transform: translatex(0px) translatey(0px);
    }

    /* Stream deck  key */
    .stream-deck .stream-deck__key:nth-child(4) {
      width: 88px;
      transform: translatex(92px) translatey(0px);
    }

    /* Stream deck  key */
    .stream-deck .stream-deck__key:nth-child(3) {
      transform: translatex(-98px) translatey(4px);
      width: 89px;
      position: relative;
      top: -4px;
    }

    /* Stream deck  key */
    .stream-deck .stream-deck__key:nth-child(10) {
      transform: translatex(3px) translatey(-4px);
      position: relative;
      top: 4px;
      left: -4px;
    }

    /* Stream deck  key */
    .stream-deck .stream-deck__key:nth-child(6) {
      width: 83px;
    }

    /* Form */
    #myForm {
      top: -2051px !important;
      bottom: auto !important;
      border-top-left-radius: 10px;
      border-bottom-right-radius: 10px;
      border-bottom-left-radius: 10px;
      border-top-right-radius: 10px;
      background-color: #313639;
      color: #fcfcfc;
    }

    /* Stream deck */
    .stream-deck {
      transform: translatex(1323px) translatey(-2212.5px);
      top: -3px;
    }

    /* Button */
    #myForm button:hover {
      background-color: #595959 !important;
      border-color: #ffffff;
      box-shadow: 0px 0px 1px 1px #7a7a7a;
    }

    @media (min-width:768px) {

      /* Form */
      #myForm {
        transform: translatex(667px) translatey(-440px) !important;
        left: 131px !important;
        right: auto !important;
      }

    }

    /* Button */
    #myForm button {
      background-color: #444444 !important;
    }

    /* Stream deck  key */
    .stream-deck .stream-deck__key {
      background-color: #444444;
    }


    .play-button {
      background-color: #4CAF50;
    }

    .pause-button {
      background-color: #f44336;
    }

    /* Pause button */
    #pause-button {
      transform: translatex(-214px) translatey(-2565px);
      position: relative;
      top: 6px;
    }

    /* Play button */
    #play-button {
      transform: translatex(-220px) translatey(-2566px);
      position: relative;
      top: 6px;
    }

    /* #player {
  pointer-events: none;
} */
    /* Control button */
    #controlButton {
      transform: translatex(-458px) translatey(-2561px);
      position: relative;
      top: 2px;
      left: -4px;
    }

    /* Message input */
    #messageInput {
      transform: translatex(790px) translatey(-1274px);
      width: 446px;
      min-height: 18px;
      height: 18px;
      min-width: 29px;
    }

    /* Button */
    button:nth-child(10) {
      transform: translatex(796px) translatey(-1305px);
      position: relative;
      top: 31px;
    }


    #chatArea {
      position: fixed;
      bottom: 20px;
      right: 20px;
      width: 300px;
      height: 400px;
      background-color: rgba(255, 255, 255, 0.5);
      overflow-y: scroll;
    }

    /* Button */
    button:nth-child(11) {
      transform: translatex(807px) translatey(-1279px);
    }

    .floating-textarea {
      position: fixed;
      bottom: 20px;
      right: 20px;
      width: 300px;
      height: 200px;
      background-color: rgba(255, 255, 255, 0.8);
      border: 1px solid #ccc;
      padding: 10px;
      overflow-y: auto;
    }

    /* Chat area */
    #chatArea {
      transform: translatex(0px) translatey(-580px);
      margin-left: 0px;
      width: 174px !important;
      padding-bottom: 5px;
    }

    #chatArea {
      height: 400px;
      /* Adjust the height to your desired value */
      overflow-y: auto;
      line-height: 16px;
      word-wrap: break-word;
      word-break: break-word;
    }

    /* Styles for screens up to 600px */
    @media (max-width: 600px) {
      /* CSS rules for small screens */
    }

    /* Styles for screens between 601px and 1200px */
    @media (min-width: 601px) and (max-width: 1200px) {
      /* CSS rules for medium screens */
    }

    /* Styles for screens above 1200px */
    @media (min-width: 1201px) {
      /* CSS rules for large screens */
    }

    /* Message input */
    #messageInput {
      border-top-left-radius: 20px;
      border-top-right-radius: 20px;
      border-bottom-left-radius: 20px;
      border-bottom-right-radius: 20px;
      border-style: solid;
      border-width: 1px;
      border-color: #5d5959;
    }

    /* Chat area */
    #chatArea {
      top: 329px;
      bottom: auto !important;
      transform: translatex(-247px) translatey(162px);
    }

    /* 
/* Text */
    /* Chat area */
    #chatArea {
      transform: translatex(-683px) translatey(-433.4000244140625px);
      left: 1248px;
      right: auto !important;
      top: 637px;
      bottom: auto !important;
    }

    /* Message input */
    #messageInput {
      transform: translatex(47px) translatey(-1654px);
    }

    /* Image */
    img {
      transform: translatex(613px) translatey(-225px);
    }

    /* Control button */
    #controlButton {
      top: 12px;
    }

    /* Play button */
    #play-button {
      top: 16px;
    }

    /* Pause button */
    #pause-button {
      top: 14px;
    }

    /* Button */
    button {
      position: relative !important;
      top: 6px !important;
    }

    /* Button */
    button:nth-child(11) {
      transform: translatex(72px) translatey(-1671px);
      top: 16px !important;
      bottom: auto !important;
    }

    /* Paragraph */
    #chatArea p {
      font-size: 14px;
      white-space: break-spaces;
      font-weight: 400;
    }

    a

    /* Chat area */
    #chatArea {
      left: 1482px;
      right: auto !important;
      top: 551px;
      width: 221px !important;
    }

    /* Chat area */
    #chatArea {
      left: 1492px;
      width: 236px !important;
    }

    /* Message input */
    #messageInput {
      transform: translatex(35px) translatey(-1807px);
    }

    /* Button */
    button:nth-child(12) {
      transform: translatex(47px) translatey(-1812px);
    }



    /* Control button */
    #controlButton {
      transform: translatex(-176px) translatey(-2682px);
      width: 119px;
    }

    /* Play button */
    #play-button {
      transform: translatex(-56px) translatey(-2640px);
    }

    /* Pause button */
    #pause-button {
      transform: translatex(-55px) translatey(-2640px);
      top: 6px;
      bottom: auto !important;
      left: -4px;
    }

    @media (min-width:768px) {

      /* Buttons */
      #buttons {
        transform: translatex(-30px) translatey(-1771px);
      }

      /* Create buttons button */
      #createButtonsButton {
        transform: translatex(19px) translatey(-1904px);
      }

      /* Heading */
      h1:nth-child(13) {
        transform: translatex(16px) translatey(-1796px) !important;
      }

      /* Num speakers */
      #numSpeakers {
        transform: translatex(40px) translatey(-1542px);
      }

    }

    /* Text Area */
    form textarea {
      height: 700px !important;
      top: -92px !important;
      bottom: auto !important;
      transform: translatex(123px) translatey(97px) !important;
    }

    /* Text Area */
    form:nth-child(9) textarea {
      top: -91px !important;
      bottom: auto !important;
    }

    /* Text */
    #text {
      top: -31px !important;
      bottom: auto !important;
      transform: translatex(29px) translatey(45px) !important;
    }

    /* Form */
    #myForm {
      top: -2110px !important;
      bottom: auto !important;
    }

    /* Input */
    form:nth-child(9) input[type=text] {
      transform: translatex(95px) translatey(16px) !important;
      position: relative;
      left: -52px;
      top: -6px;
    }

    /* Input */
    form:nth-child(9) input:nth-child(3) {
      transform: translatex(103px) translatey(16px) !important;
      position: relative;
      left: -58px;
      top: -9px;
    }

    /* Input */
    form:nth-child(9) input[type=file] {
      position: relative;
      top: -27px;
      left: -89px;
    }

    /* Save */
    #saveBtn {
      transform: translatex(-113px) translatey(0px) !important;
      left: 2px;
      top: -9px;
    }



    /* Button */
    button:nth-child(13) {
      transform: translatex(67px) translatey(-1953px);
    }

    /* Message input */
    #messageInput {
      transform: translatex(47px) translatey(-1945px);
    }

    /* Heading */
    h1 {
      padding-top: 8px;
    }

    /* Control button */
    #controlButton {
      transform: translatex(-176px) translatey(-2839px);
      top: 4px !important;
      bottom: auto !important;
      left: -5px;
    }

    /* Play button */
    #play-button {
      transform: translatex(-56px) translatey(-2790px);
    }

    /* Pause button */
    #pause-button {
      transform: translatex(-51px) translatey(-2790px);
      left: -5px;
      top: 7px !important;
      bottom: auto !important;
    }

    /* Stream deck */
    .stream-deck {
      transform: translatex(869px) translatey(-2452.5px);
    }

    /* Create buttons button */
    #createButtonsButton {
      top: 1px !important;
      bottom: auto !important;
    }

    @media (min-width:768px) {

      /* Form */
      #myForm {
        left: 160px !important;
        right: auto !important;
        transform: translatex(881px) translatey(-815px) !important;
      }

      /* File name */
      #fileName {
        transform: translatex(3px) translatey(43px) !important;
      }

      /* File */
      #myFile {
        top: -45px;
        left: -243px;
      }

      /* Label */
      form label {
        transform: translatex(-27px) translatey(-1508px) !important;
        height: 40px !important;
      }

      /* Num speakers */
      #numSpeakers {
        transform: translatex(40px) translatey(-1663px);
        top: -367px;
      }

      /* Heading */
      h1 {
        top: -5px !important;
        transform: translatex(19px) translatey(-1919px) !important;
        bottom: auto !important;
      }

      /* Create buttons button */
      #createButtonsButton {
        transform: translatex(19px) translatey(-2028px);
      }

      /* Buttons */
      #buttons {
        transform: translatex(-26px) translatey(-2044px);
      }

    }

    /* Text Area */
    form textarea {
      height: 695px !important;
      top: -92px !important;
      bottom: auto !important;
    }

    /* Text Area */
    form:nth-child(9) textarea {
      top: -91px !important;
      bottom: auto !important;
    }

    /* Text */
    #text {
      top: -31px !important;
      bottom: auto !important;
      transform: translatex(29px) translatey(45px) !important;
    }

    /* Form */
    #myForm {
      top: -2099px !important;
      bottom: auto !important;
    }

    /* Input */
    form:nth-child(9) input[type=text] {
      transform: translatex(95px) translatey(16px) !important;
      position: relative;
      left: -52px;
      top: -6px;
    }

    /* Input */
    form:nth-child(9) input:nth-child(3) {
      transform: translatex(103px) translatey(16px) !important;
      position: relative;
      left: -58px;
      top: -9px;
    }

    /* Input */
    form:nth-child(9) input[type=file] {
      position: relative;
      top: -27px;
      left: -89px;
    }

    /* Save */
    #saveBtn {
      transform: translatex(-113px) translatey(0px) !important;
      left: 2px;
      top: -9px;
    }


    /* Stream deck */
    .stream-deck {
      transform: translatex(867px) translatey(-2445.5px);
    }

    /* Label */
    form:nth-child(10) label {
      width: 82px;
      left: -5px;
      top: -853px !important;
      bottom: auto !important;
    }

    /* Message input */
    #messageInput {
      transform: translatex(44px) translatey(-1957px);
      position: relative;
      top: 11px;
    }

    /* Button */
    button:nth-child(13) {
      transform: translatex(63px) translatey(-1966px);
      top: 20px !important;
      bottom: auto !important;
    }

    /* Label */
    form label {
      top: -858px !important;
    }

    /* Control button */
    #controlButton {
      transform: translatex(-175px) translatey(-2813px);
    }

    /* Play button */
    #play-button {
      transform: translatex(-56px) translatey(-2769px);
    }

    /* Pause button */
    #pause-button {
      transform: translatex(-51px) translatey(-2771px);
      top: 9px !important;
      bottom: auto !important;
    }

    /* Button */
    form button {
      transform: translatex(-475px) translatey(-2450px) !important;
      width: 56% !important;
    }

    /* Tag btn2 */
    .tag-btn2 {
      transform: translatex(1056px) translatey(-3266px) !important;
    }

    @media (min-width:768px) {

      /* Form */
      #myForm {
        left: 160px !important;
        right: auto !important;
        transform: translatex(881px) translatey(-815px) !important;
      }

      /* File name */
      #fileName {
        transform: translatex(3px) translatey(43px) !important;
      }

      /* File */
      #myFile {
        top: -45px;
        left: -243px;
      }

      /* Label */
      form:nth-child(10) label {
        transform: translatex(-35px) translatey(-1492px);
      }

      /* Heading */
      h1 {
        transform: translatex(16px) translatey(-1933px) !important;
      }

      /* Num speakers */
      #numSpeakers {
        transform: translatex(37px) translatey(-1678px);
      }

      /* Create buttons button */
      #createButtonsButton {
        transform: translatex(16px) translatey(-2041px);
      }

      /* Buttons */
      #buttons {
        transform: translatex(-32px) translatey(-2036px);
      }

    }









    /* Body */
    body {
      position: fixed;
      left: 2px;
      top: 835px;
      min-height: 1548px;
      height: 1669px !important;
      margin-top: 3px;
      bottom: 10px;
    }

    /* Heading */
    h1 {
      display: none;
    }

    /* Label */
    #myForm label {
      top: -877px !important;
      position: relative;
      bottom: auto !important;
      width: 35% !important;
    }

    /* Button */
    #myForm button {
      min-height: 110px;
      height: 110px !important;
      width: 88px !important;
      left: 20px;
      transform: translatex(251px) translatey(-280px) !important;
      top: 10px !important;
      bottom: auto !important;
    }

    /* Label */
    #myForm label:nth-child(7) {
      top: -897px !important;
      bottom: auto !important;
      left: 29px !important;
      right: auto !important;
    }

    /* Label */
    #myForm label:nth-child(3) {
      top: -916px !important;
      bottom: auto !important;
    }

    /* Stream deck */
    .stream-deck {
      top: 56px;
      left: -8px;
      transform: translatex(762px) translatey(-3120.5px);
    }

    /* Form */
    #myForm {
      top: -2134px !important;
      bottom: auto !important;
    }

    /* Chat area */
    #chatArea {
      transform: translatex(-940px) translatey(880.6px);
      top: -465px;
      left: 1728px;
    }



    /* Message input */
    #messageInput {
      transform: translatex(44px) translatey(-2612px);
    }

    /* Button */
    button:nth-child(13) {
      transform: translatex(68px) translatey(-2622px);
    }

    /* Create buttons button */
    #createButtonsButton {
      top: 4px !important;
      bottom: auto !important;
    }

    /* Image */
    img {
      transform: translatex(591px) translatey(-997px);
    }

    /* Control button */
    #controlButton {
      transform: translatex(-197px) translatey(-3424px);
      left: -8px;
    }

    /* Form Division */
    form {
      top: -640px !important;
      bottom: auto !important;
    }

    /* Text */
    #text {
      transform: translatex(138px) translatey(47px) !important;
    }

    /* File name */
    #fileName {
      left: 58px;
      top: -39px;
    }

    /* Save */
    #saveBtn {
      left: 175px;
      top: -2px;
    }

    /* Input */
    form:nth-child(9) input[type=text] {
      transform: translatex(153px) translatey(3px) !important;
      left: -88px;
    }

    /* Input */
    form:nth-child(9) input:nth-child(3) {
      transform: translatex(159px) translatey(4px) !important;
      top: -14px;
      left: -72px;
    }

    /* Input */
    form:nth-child(9) input[type=file] {
      top: -45px;
      left: -43px;
    }

    /* Label */
    #myForm label:nth-child(5) {
      top: -889px !important;
      bottom: auto !important;
    }

    /* Play button */
    #play-button {
      transform: translatex(-80px) translatey(-3379px);
    }

    /* Pause button */
    #pause-button {
      transform: translatex(-74px) translatey(-3381px);
    }

    /* Button */
    form:nth-child(10) button {
      transform: translatex(-1369px) translatey(-2018px) !important;
    }

    @media (min-width:768px) {

      /* Label */
      #myForm label {
        transform: translatex(-25px) translatey(894px) !important;
      }

      /* Label */
      #myForm label:nth-child(5) {
        transform: translatex(-27px) translatey(831px) !important;
      }

      /* Label */
      #myForm label:nth-child(7) {
        transform: translatex(-22px) translatey(807px) !important;
      }

      /* Form */
      #myForm {
        left: 147px !important;
        right: auto !important;
        transform: translatex(784px) translatey(-1409px) !important;
      }

      /* Body */
      body {
        height: 1426px;
      }

      /* Player */
      #player {
        top: -737px;
      }

      /* Speaker form */
      #speakerForm {
        transform: translatex(568px) translatey(-528px) !important;
      }

      /* Label */
      form:nth-child(10) label {
        transform: translatex(-881px) translatey(-1086px) !important;
      }

      /* Num speakers */
      #numSpeakers {
        transform: translatex(40px) translatey(-2286px);
      }

      /* Create buttons button */
      #createButtonsButton {
        transform: translatex(32px) translatey(-2657px);
        left: 15px;
      }

      /* Image */
      img {
        left: 29px;
      }

      /* Form Division */
      form {
        left: 53px !important;
        transform: translatex(1365px) translatey(-980px) !important;
      }

      /* Text */
      #text {
        left: -78px;
      }

      /* Form Division */
      form:nth-child(7) {
        transform: translatex(1426px) translatey(-1129px) !important;
        left: -142px !important;
        right: auto !important;
      }

      /* File */
      #myFile {
        left: -72px;
        top: -38px;
      }

      /* Buttons */
      #buttons {
        transform: translatex(-42px) translatey(-2652px);
      }

      /* Form Division */
      form:nth-child(10) {
        position: sticky;
      }

    }

    /* Body */
    body {
      top: 775px;
      position: fixed;
    }

    /* Form */
    #myForm {
      min-height: 222px;
    }

    /* Stream deck */
    .stream-deck {
      transform: translatex(43px) translatey(-2796px);
      top: 80px;
    }

    /* Control button */
    #controlButton {
      transform: translatex(-194px) translatey(-3327px);
      left: -12px;
      top: 23px !important;
      bottom: auto !important;
    }

    /* Tag btn2 */
    .tag-btn2 {
      display: none;
    }

    /* Button */
    form button {
      top: 14px !important;
      bottom: auto !important;
    }

    /* Message input */
    #messageInput {
      top: 28px;
    }

    /* Button */
    button:nth-child(13) {
      top: 37px !important;
      bottom: auto !important;
      left: -6px;
    }

    /* Play button */
    #play-button {
      top: 32px !important;
      bottom: auto !important;
    }

    /* Pause button */
    #pause-button {
      top: 15px !important;
      bottom: auto !important;
      transform: translatex(-79px) translatey(-3362px);
      left: -3px;
    }

    /* Image */
    img {
      top: 393px;
    }


    /* Chat area */
    #chatArea {
      transform: translatex(-923px) translatey(738.6px);
    }

    /* Input */
    form:nth-child(9) input[type=text] {
      left: -56px;
    }

    /* Input */
    form:nth-child(9) input:nth-child(3) {
      left: -62px;
    }

    /* Input */
    form:nth-child(9) input[type=file] {
      left: -37px;
    }

    /* Buttons */
    #buttons {
      display: none;
    }

    @media (min-width:768px) {

      /* Form */
      #myForm {
        left: 150px !important;
        right: auto !important;
        transform: translatex(-72px) translatey(-564px) !important;
      }

      /* Player */
      #player {
        top: -717px;
      }

      /* Label */
      form label {
        transform: translatex(-888px) translatey(-1059px) !important;
      }

      /* Buttons */
      #buttons {
        transform: translatex(171px) translatey(-2579px);
      }

    }

    /* Body */
    body {
      top: 779px;
      position: fixed;
    }

    /* Form */
    #myForm {
      min-height: 222px;
    }

    /* Stream deck */
    .stream-deck {
      transform: translatex(43px) translatey(-2796px);
      top: 80px;
    }

    /* Control button */
    #controlButton {
      transform: translatex(-193px) translatey(-2609px);
      left: -10px;
      top: 18px !important;
      bottom: auto !important;
    }

    /* Tag btn2 */
    .tag-btn2 {
      display: none;
    }

    /* Button */
    form button {
      top: 14px !important;
      bottom: auto !important;
    }

    /* Message input */
    #messageInput {
      top: 28px;
    }

    /* Button */
    button:nth-child(13) {
      top: 37px !important;
      bottom: auto !important;
      left: -6px;
    }

    /* Play button */
    #play-button {
      top: 30px !important;
      bottom: auto !important;
      transform: translatex(-75px) translatey(-2663px);
      left: -4px;
    }

    /* Pause button */
    #pause-button {
      top: 15px !important;
      bottom: auto !important;
      transform: translatex(-76px) translatey(-2648px);
      left: -3px;
    }

    /* Image */
    img {
      top: 393px;
    }


    /* Chat area */
    #chatArea {
      transform: translatex(-923px) translatey(738.6px);
    }

    /* Input */
    form:nth-child(9) input[type=text] {
      left: -56px;
    }

    /* Input */
    form:nth-child(9) input:nth-child(3) {
      left: -62px;
    }

    /* Input */
    form:nth-child(9) input[type=file] {
      left: -37px;
    }

    /* Buttons */
    #buttons {
      display: none;
    }

    @media (min-width:768px) {

      /* Form */
      #myForm {
        left: 150px !important;
        right: auto !important;
        transform: translatex(-72px) translatey(-564px) !important;
      }

      /* Player */
      #player {
        top: -717px;
      }

      /* Label */
      form label {
        transform: translatex(-888px) translatey(-1059px) !important;
      }

      /* Buttons */
      #buttons {
        transform: translatex(171px) translatey(-2579px);
      }

    }










    /* Styles for the dynamic form */
    #myForm {
      max-width: 400px;
      margin: 0 auto;
      padding: 20px;
      background-color: #500505;
      border: 1px solid #ddd;
      border-radius: 5px;
    }

    #myForm label {
      display: block;
      margin-bottom: 10px;
    }

    #myForm input[type="text"],
    #myForm select {
      width: 100%;
      height: 30px;
      padding: 5px;
      border: 1px solid #ddd;
      border-radius: 5px;
    }

    #myForm button[type="submit"] {
      display: block;
      width: 100%;
      padding: 10px;
      background-color: #4CAF50;
      color: white;
      border: none;
      border-radius: 5px;
      cursor: pointer;
      transition: background-color 0.3s ease;
    }

    #myForm button[type="submit"]:hover {
      background-color: #45a049;
    }











    /* Styling for form 1 */
    #form1 select {
      width: 100%;
      height: 40px;
      margin: 10px 0;
      padding: 5px;
      border: none;
      border-radius: 5px;
      box-shadow: 0 0 5px rgba(0, 0, 0, 0.2);
    }

    #form1 input[type="text"] {
      width: 100%;
      height: 40px;
      margin: 10px 0;
      padding: 5px;
      border: none;
      border-radius: 5px;
      box-shadow: 0 0 5px rgba(0, 0, 0, 0.2);
    }

    #form1 button[type="submit"] {
      background-color: #4CAF50;
      color: white;
      padding: 10px;
      border: none;
      border-radius: 5px;
      cursor: pointer;
      transition: background-color 0.3s ease;
    }

    /* Styling for form 2 */
    #form2 select {
      width: 100%;
      height: 40px;
      margin: 10px 0;
      padding: 5px;
      border: none;
      border-radius: 5px;
      box-shadow: 0 0 5px rgba(0, 0, 0, 0.2);
    }

    #form2 input[type="text"],
    #form2 input[type="email"] {
      width: 100%;
      height: 40px;
      margin: 10px 0;
      padding: 5px;
      border: none;
      border-radius: 5px;
      box-shadow: 0 0 5px rgba(0, 0, 0, 0.2);
    }

    #form2 textarea {
      width: 100%;
      margin: 10px 0;
      padding: 5px;
      border: none;
      border-radius: 5px;
      box-shadow: 0 0 5px rgba(0, 0, 0, 0.2);
    }

    #form2 button[type="submit"] {
      background-color: #4CAF50;
      color: white;
      padding: 10px;
      border: none;
      border-radius: 5px;
      cursor: pointer;
      transition: background-color 0.3s ease;
    }


    /* Text Area */
    form textarea {
      bottom: -110px !important;
    }

    /* Body */
    body {
      top: 10px;
      position: relative;
    }

    /* Stream deck */
    .stream-deck {
      top: 796px;
    }

    /* Image */
    img {
      top: 1199px;
    }


    /* Label */
    form:nth-child(10) label {
      top: -15px !important;
    }

    /* Play button */
    #play-button {
      top: 836px !important;
    }

    /* Pause button */
    #pause-button {
      top: 820px !important;
    }

    /* Control button */
    #controlButton {
      top: 831px !important;
    }

    /* Form */
    #myForm {
      min-height: 278px;
      height: 278px;
      margin-left: 23px;
      margin-right: 11px;
      top: -2115px !important;
      bottom: auto !important;
    }

    /* Label */
    #myForm label:nth-child(9) {
      top: -892px !important;
      bottom: auto !important;
      margin-bottom: 6px;
    }

    /* Reference input */
    #Reference-input {
      transform: translatex(142px) translatey(-71px) !important;
    }

    /* Destination input */
    #Destination-input {
      transform: translatex(140px) translatey(-104px) !important;
    }

    /* Payload input */
    #Payload-input {
      transform: translatex(141px) translatey(-140px) !important;
    }

    /* Time date input */
    #TimeDate-input {
      transform: translatex(142px) translatey(-170px) !important;
    }

    /* Button */
    #myForm button {
      transform: translatex(253px) translatey(-306px) !important;
    }

    /* Form Division */
    form:nth-child(7) {
      top: 762px !important;
    }

    /* Form Division */
    form:nth-child(9) {
      top: 175px !important;
    }

    @media (min-width:768px) {

      /* Player */
      #player {
        top: 74px;
      }

      /* Label */
      #myForm label:nth-child(9) {
        transform: translatex(-23px) translatey(766px) !important;
      }

      /* Form */
      #myForm {
        transform: translatex(-176px) translatey(126px) !important;
        left: 175px !important;
        right: auto !important;
      }

      /* Label */
      form:nth-child(10) label {
        transform: translatex(-915px) translatey(-1095px) !important;
      }

    }

    /* Additional CSS styles for both forms */
    /* ... */
    /* Heading */
    h2 {
      transform: translatex(152px) translatey(-1945px);
      width: 12%;
      background-color: #dcbc2c;
      border-style: solid;
      border-width: 1px;
      position: relative;
      top: -25px;
      left: -3px;
    }

    /* Button */
    #myForm button {
      background-color: #444444;
      box-shadow: 0px 0px 1px 2px #070707;
      left: 60px;
      line-height: 24px;
    }

    /* Time date input */
    #TimeDate-input {
      padding-right: 0px !important;
      width: 154px !important;
    }

    /* Payload input */
    #Payload-input {
      width: 149px !important;
    }

    /* Destination input */
    #Destination-input {
      width: 148px !important;
    }

    /* Select location */
    #selectLocation {
      left: -323px;
    }

    /* Form */
    #myForm {
      border-top-left-radius: 10px;
      border-top-right-radius: 10px;
      border-bottom-left-radius: 10px;
      border-bottom-right-radius: 10px;
      background-color: #333333;
    }

    /* Stream deck */
    .stream-deck {
      background-color: #333333;
    }

    /* Stream deck  key */
    .stream-deck .stream-deck__key {
      background-color: #444444;
    }

    @media (min-width:768px) {

      /* Form */
      #myForm {
        width: 421px !important;
      }

    }

    /* Message input */
    #messageInput {
      top: 313px;
      transform: translatex(31px) translatey(-1848px);
    }

    /* Button */
    button {
      top: 790px !important;
    }

    /* Button */
    button:nth-child(13) {
      top: 319px !important;
      transform: translatex(64px) translatey(-1852px);
    }

    /* Play button */
    #play-button {
      left: 762px;
      display: none;
    }

    /* Pause button */
    #pause-button {
      left: 638px;
      display: none;
    }

    /* Control button */
    #controlButton {
      transform: translatex(505px) translatey(-2612px);
      left: -13px;
      display: none;
    }

    /* Heading */
    h2 {
      left: 27px;
      top: 26px;
      border-top-left-radius: 15px;
      border-top-right-radius: 15px;
      border-bottom-left-radius: 15px;
      border-bottom-right-radius: 15px;
      text-align: center;
    }

    /* Stream deck */
    .stream-deck {
      top: 845px;
    }

    /* Form */
    #myForm {
      top: -2063px !important;
      bottom: auto !important;
    }

    /* Select location */
    #selectLocation {
      top: -2px;
      width: 144px !important;
    }

    /* Reference input */
    #Reference-input {
      width: 148px !important;
      height: 26px !important;
    }

    /* Destination input */
    #Destination-input {
      height: 29px !important;
    }

    /* Payload input */
    #Payload-input {
      height: 28px !important;
    }

    /* Time date input */
    #TimeDate-input {
      height: 26px !important;
    }

    /* Button */
    #myForm button {
      top: -14px !important;
      bottom: auto !important;
    }

    /* Form */
    #myForm {
      min-height: 333px;
    }


    /* Button */
    button {
      transform: translatex(1244px) translatey(-2766px) !important;
      background-color: #565656 !important;
      border-style: solid !important;
      border-width: 1px !important;
      border-color: #000000 !important;
    }

    /* Form */
    #myForm {
      top: -2048px !important;
      bottom: auto !important;
      background-color: #fae019;
      color: #000000;
      border-width: 1px;
      border-color: #000000;
      box-shadow: 6px -7px 19px -5px #181515;
      background-blend-mode: normal;
      background-attachment: scroll;
      background-image: linear-gradient(to right, #06beb6 0%, #48b1bf 100%);
    }

    /* Button */
    button:nth-child(31) {
      transform: translatex(1143px) translatey(-2883px) !important;
      width: 94px;
      min-height: 109px;
    }

    /* Stream deck  key */
    .stream-deck .stream-deck__key {
      background-color: #444444;
    }

    /* Stream deck  key */
    .stream-deck .stream-deck__key:nth-child(5) {
      background-color: #fae019;
      color: #000000;
      background-image: linear-gradient(to right, #06beb6 0%, #48b1bf 100%);
    }

    /* Reference input */
    #Reference-input {
      border-width: 1px !important;
      border-color: #000000;
      border-style: solid !important;
    }

    /* Destination input */
    #Destination-input {
      border-color: #000000;
      border-style: solid !important;
      border-width: 1px !important;
    }

    /* Payload input */
    #Payload-input {
      border-style: solid !important;
      border-width: 1px !important;
    }

    /* Time date input */
    #TimeDate-input {
      border-width: 1px !important;
      border-style: solid !important;
    }

    @media (min-width:768px) {


      /* Form */
      #myForm {
        transform: translatex(-139px) translatey(-333px) !important;
      }




      /* Speaker form */
      #speakerForm {
        transform: translatex(556px) translatey(-288px) !important;
      }

    }

    /* Heading */
    h2 {
      transform: translatex(136px) translatey(-1894px);
    }

    /* Body */
    body {
      top: 61px;
    }

    /* Button */
    button {
      transform: translatex(103px) translatey(-1852px) !important;
    }

    /* Form */
    #myForm {
      top: -2039px !important;
      bottom: auto !important;
    }

    /* Label */
    #myForm label:nth-child(9) {
      font-weight: 700;
    }

    /* Label */
    #myForm label:nth-child(7) {
      font-weight: 700;
    }

    /* Label */
    #myForm label:nth-child(5) {
      font-weight: 700;
    }

    /* Label */
    #myForm label:nth-child(3) {
      font-weight: 700;
    }

    /* Label */
    #myForm label:nth-child(1) {
      font-weight: 700;
      left: 28px !important;
      right: auto !important;
    }


    /* SPMT Form Styles */
    #spmtForm {
      margin-bottom: 20px;
    }

    #spmtForm label {
      font-weight: bold;
    }

    #spmtForm select,
    #spmtForm input[type="text"] {
      width: 100%;
      height: 40px;
      margin: 10px 0;
      padding: 5px;
      border: none;
      border-radius: 5px;
      box-shadow: 0 0 5px rgba(0, 0, 0, 0.2);
    }

    #spmtForm button[type="submit"] {
      background-color: #4caf50;
      color: white;
      padding: 10px;
      border: none;
      border-radius: 5px;
      cursor: pointer;
      transition: background-color 0.3s ease;
    }





    /* Label */
    #spmtForm label {
      top: 500px !important;
      left: 6px !important;
      right: auto !important;
      color: #ffffff;
    }

    /* Spmt form */
    #spmtForm {
      bottom: 13px !important;
      min-height: 446px;
      height: 446px !important;
      border-style: solid;
      border-width: 1px;
      background-image: linear-gradient(to right, #141e30 0%, #243b55 100%);
      border-top-left-radius: 20px;
      border-top-right-radius: 20px;
      border-bottom-left-radius: 20px;
      border-bottom-right-radius: 20px;
      background-size: contain;
    }

    /* Spmt Unknown location */
    #spmtSelectLocation {
      width: 54% !important;
      transform: translatex(67px) translatey(15px);
      position: relative;
      top: -2px;
      left: -14px;
    }

    /* Spmt reference input */
    #spmtReference-input {
      transform: translatex(-379px) translatey(116px) !important;
      position: relative;
      top: -6px;
    }

    /* Spmt destination input */
    #spmtDestination-input {
      transform: translatex(73px) translatey(108px) !important;
      position: relative;
      left: -15px;
    }

    /* Spmt payload input */
    #spmtPayload-input {
      transform: translatex(-219px) translatey(178px) !important;
      position: relative;
      left: 49px;
    }

    /* Spmt time date input */
    #spmtTimeDate-input {
      transform: translatex(117px) translatey(155px) !important;
      position: relative;
      left: 19px;
      top: 30px;
    }

    /* Label */
    #spmtForm label:nth-child(1) {
      width: 75px !important;
      top: 510px !important;
      bottom: auto !important;
    }

    /* Body */
    body {
      left: 42px;
    }

    /* Label */
    #spmtForm label:nth-child(9) {
      left: 21px !important;
      right: auto !important;
      top: 520px !important;
      bottom: auto !important;
    }

    /* Button */
    #spmtForm button {
      top: 482px !important;
      width: 90px !important;
      height: 108px;
      transform: translatex(203px) translatey(-419px) !important;
      background-color: #7d2f2f !important;
      border-width: 1px;
      border-color: #ffffff !important;
      box-shadow: 0px 0px 3px 0px #ffffff;
    }

    @media (min-width:768px) {

      /* Spmt form */
      #spmtForm {
        width: 670px !important;
        left: 28px !important;
        transform: translatex(578px) translatey(-1586px) !important;
      }

      /* Form */
      #myForm {
        transform: translatex(-142px) translatey(221px) !important;
      }

      /* Label */
      #spmtForm label {
        transform: translatex(-1302px) translatey(-519px) !important;
      }

      /* Label */
      #spmtForm label:nth-child(1) {
        transform: translatex(15px) translatey(-491px) !important;
      }

      /* Label */
      #spmtForm label:nth-child(3) {
        transform: translatex(-416px) translatey(-395px) !important;
      }

      /* Label */
      #spmtForm label:nth-child(5) {
        transform: translatex(12px) translatey(-392px) !important;
      }

      /* Label */
      #spmtForm label:nth-child(7) {
        transform: translatex(-210px) translatey(-334px) !important;
      }

      /* Label */
      #spmtForm label:nth-child(9) {
        transform: translatex(-457px) translatey(-261px) !important;
      }

    }

    /* Label */
    #spmtForm label {
      top: 500px !important;
      left: 6px !important;
      right: auto !important;
      color: #ffffff;
    }

    /* Spmt form */
    #spmtForm {
      bottom: 13px !important;
      min-height: 446px;
      height: 446px !important;
      border-style: solid;
      border-width: 1px;
      background-image: linear-gradient(to right, #141e30 0%, #243b55 100%);
      border-top-left-radius: 20px;
      border-top-right-radius: 20px;
      border-bottom-left-radius: 20px;
      border-bottom-right-radius: 20px;
      background-size: contain;
    }

    /* Spmt Unknown location */
    #spmtSelectLocation {
      width: 54% !important;
      transform: translatex(67px) translatey(15px);
      position: relative;
      top: -2px;
      left: -14px;
    }

    /* Spmt reference input */
    #spmtReference-input {
      transform: translatex(-379px) translatey(116px) !important;
      position: relative;
      top: -6px;
    }

    /* Spmt destination input */
    #spmtDestination-input {
      transform: translatex(73px) translatey(108px) !important;
      position: relative;
      left: -15px;
    }

    /* Spmt payload input */
    #spmtPayload-input {
      transform: translatex(-219px) translatey(178px) !important;
      position: relative;
      left: 49px;
    }

    /* Spmt time date input */
    #spmtTimeDate-input {
      transform: translatex(117px) translatey(155px) !important;
      position: relative;
      left: 19px;
      top: 30px;
    }

    /* Label */
    #spmtForm label:nth-child(1) {
      width: 75px !important;
      top: 510px !important;
      bottom: auto !important;
    }

    /* Body */
    body {
      left: 42px;
    }


    /* Stream deck  key */
    .stream-deck .stream-deck__key:nth-child(10) {
      background-image: linear-gradient(to right, #141e30 0%, #243b55 100%);
    }

    @media (min-width:768px) {


      /* Form */
      #myForm {
        transform: translatex(-142px) translatey(221px) !important;
      }

    }

    /* Body */
    body {
      position: fixed;
    }


    /* Form */
    #myForm {
      top: 341px !important;
    }

    /* Spmt form */


    @media (min-width:768px) {

      /* Form */
      #myForm {
        position: fixed;
        transform: translatex(-174px) translatey(735px) !important;
      }



    }




    /* Form styling */
    form {
      max-width: 400px;
      margin: 0 auto;
      padding: 20px;
      background-color: #f9f9f9;
      border: 1px solid #ccc;
      border-radius: 5px;
    }

    /* Label styling */
    form label {
      display: block;
      font-weight: bold;
      margin-bottom: 5px;
    }

    /* Input field styling */
    form input[type="text"],
    form input[type="date"],
    form textarea,
    form select {
      width: 100%;
      padding: 8px;
      border: 1px solid #ccc;
      border-radius: 4px;
      box-sizing: border-box;
      margin-bottom: 10px;
      font-size: 16px;
    }

    /* Button styling */
    form button[type="submit"] {
      background-color: #06beb6;
      color: white;
      padding: 10px 20px;
      border: none;
      border-radius: 4px;
      cursor: pointer;
      font-size: 16px;
    }

    form button[type="submit"]:hover {
      background-color: #48b1bf;
    }

    /* Optional: Additional styling for specific form elements */

    /* Adjust select dropdown width */
    form select {
      width: 100%;
    }

    /* Adjust textarea height */
    form textarea {
      height: 100px;
    }

    /* Adjust label position for left-aligned labels */
    form .u-label-left {
      text-align: left;
    }

    /* Adjust form container width */
    .u-section-1 .u-sheet .u-gradient form {
      max-width: 600px;
    }

    /* Adjust form container position */
    .u-section-1 .u-sheet .u-gradient form {
      margin: 0 auto;
      margin-top: 20px;
      margin-bottom: 20px;
    }


    /* Text Area */
    form textarea {
      transform: translatex(28px) translatey(82px) !important;
    }

    /* Form2 */
    #form2 {
      margin-right: 22px;
      margin-left: 17px;
      min-height: 531px;
      height: 548px;
      top: -655px !important;
      bottom: auto !important;
    }

    /* Label */
    #form1 label {
      top: 488px !important;
      bottom: auto !important;
    }

    /* Form1 */
    #form1 {
      margin-left: 16px;
      margin-right: 5px;
      min-height: 530px;
      height: 549px;
    }

    /* Heading */
    h2 {
      display: none;
    }

    /* Label */
    #form2 label {
      top: 608px !important;
      left: 600px !important;
      bottom: auto !important;
    }

    /* Button */
    #form1 button {
      transform: translatex(-7px) translatey(-10px) !important;
      left: 16px;
      top: 21px !important;
      bottom: auto !important;
    }

    /* Select */
    #form2 select {
      width: 58% !important;
      transform: translatex(113px) translatey(-5px);
    }

    /* Input */
    #form2 input[type=text] {
      transform: translatex(127px) translatey(-4px) !important;
      width: 162px !important;
    }

    /* Select */
    #form1 select {
      width: 55% !important;
      transform: translatex(123px) translatey(13px);
    }

    /* Input */
    #form1 input[type=text] {
      width: 175px !important;
      transform: translatex(123px) translatey(-9px) !important;
      position: relative;
      top: 7px;
    }

    /* Button */
    #form2 button {
      transform: translatex(9px) translatey(15px) !important;
      top: -6px !important;
      bottom: auto !important;
    }

    /* Button */
    form button {
      transform: translatex(-2313px) translatey(-2116px) !important;
    }

    /* Button */
    form:nth-child(10) button {
      transform: translatex(-2313px) translatey(-2097px) !important;
      top: 802px !important;
      bottom: auto !important;
    }

    /* Video input */
    #videoIdInput {
      transform: translatex(-2292px) translatey(-3472px) !important;
      top: 2227px;
      width: 164px !important;
    }

    /* Chat area */
    #chatArea {
      transform: translatex(-873px) translatey(1155px);
      height: 283px;
    }

    /* Form Division */
    form {
      margin-left: 57px !important;
      margin-right: 25px !important;
    }

    /* Message input */
    #messageInput {
      min-height: 39px;
      transform: translatex(44px) translatey(-1914px);
    }

    /* Stream deck */
    .stream-deck {
      transform: translatex(52px) translatey(-2867px);
    }

    /* Send button */
    #sendButton {
      transform: translatex(81px) translatey(-1924px) !important;
      background-color: #e2e2e2 !important;
    }

    @media (min-width:768px) {

      /* Speaker form */
      #speakerForm {
        transform: translatex(458px) translatey(-210px) !important;
      }

      /* Label */
      #form2 label {
        transform: translatex(-593px) translatey(-568px) !important;
      }

      /* Label */
      #form1 label {
        transform: translatex(36px) translatey(-445px) !important;
      }

      /* Label */
      form label {
        transform: translatex(-1901px) translatey(-1182px) !important;
      }

      /* Form2 */
      #form2 {
        transform: translatex(1138px) translatey(-2585px) !important;
      }

      /* Form1 */
      #form1 {
        transform: translatex(703px) translatey(-2050px) !important;
      }

      /* Label */
      form:nth-child(10) label {
        transform: translatex(-1901px) translatey(-1180px) !important;
      }

      /* Form Division */
      form:nth-child(9) {
        transform: translatex(-57px) translatey(-578px) !important;
      }

      /* Form Division */
      form {
        transform: translatex(977px) translatey(-801px) !important;
      }

      /* Form Division */
      form:nth-child(7) {
        transform: translatex(586px) translatey(-314px) !important;
      }

    }

    #inputVideo {
      display: flex;
      flex-direction: column;
      align-items: center;
    }

    #inputVideo label {
      margin-bottom: 10px;
      font-weight: bold;
    }

    #inputVideo input[type="text"] {
      padding: 5px;
      width: 200px;
      margin-bottom: 10px;
    }

    #inputVideo button[type="submit"] {
      padding: 10px 20px;
      background-color: #4CAF50;
      color: white;
      border: none;
      cursor: pointer;
    }

    #inputVideo button[type="submit"]:hover {
      background-color: #45a049;
    }

    /* Body */
    body {
      top: -1px;
      left: -23px;
    }

    /* Button */
    #inputVideo button {
      left: 1111px;
      top: 1360px !important;
      bottom: auto !important;
      transform: translatex(-2182px) translatey(-3429px) !important;
    }

    /* Video input */
    #videoIdInput {
      position: relative;
      top: 4079px;
      left: 1119px;
      transform: translatex(-1865px) translatey(-6101px) !important;
    }

    /* Label */
    #inputVideo label {
      left: 1072px;
      top: -61px !important;
    }

    /* Form2 */
    #form2 {
      top: -677px !important;
      bottom: auto !important;
      background-image: linear-gradient(to right, #141e30 0%, #243b55 100%);
      color: #f4f4f4;
      border-style: solid;
      border-width: 1px;
      border-top-left-radius: 20px;
      border-top-right-radius: 20px;
      border-bottom-left-radius: 20px;
      border-bottom-right-radius: 20px;
      box-shadow: 1px 2px 8px 2px #000000;
    }

    /* Form1 */
    #form1 {
      top: -614px !important;
      bottom: auto !important;
      background-image: linear-gradient(to right, #c9d6ff 0%, #e2e2e2 100%);
      border-top-left-radius: 20px;
      border-top-right-radius: 20px;
      border-bottom-left-radius: 20px;
      border-bottom-right-radius: 20px;
      box-shadow: 1px 1px 2px 2px #212529;
    }

    /* Chat area */
    #chatArea {
      transform: translatex(-1704px) translatey(1090px);
      top: -474px;
      bottom: auto !important;
    }

    /* Message input */
    #messageInput {
      top: 302px;
      left: 4px;
    }

    /* Send button */
    #sendButton {
      transform: translatex(77px) translatey(-2379px) !important;
      color: #000000;
      top: 773px !important;
      bottom: auto !important;
    }

    /* Select */
    #form2 select {
      position: relative;
      left: 23px;
    }

    /* Label */
    #form1 label {
      left: -18px;
      top: 496px !important;
      bottom: auto !important;
    }

    /* Select */
    #form1 select {
      position: relative;
      top: -7px;
      left: 20px;
    }

    /* Button */
    #form2 button {
      background-color: #e3b23f !important;
    }

    /* Button */
    #form1 button {
      background-color: #d4ab16 !important;
    }

    /* Stream deck */
    .stream-deck {
      transform: translatex(557px) translatey(-2496px);
      display: none;
    }

    @media (min-width:768px) {

      /* Form1 */
      #form1 {
        left: 60px !important;
        transform: translatex(671px) translatey(-1608px) !important;
        right: auto !important;
      }

      /* Form2 */
      #form2 {
        transform: translatex(1107px) translatey(-2098px) !important;
      }

      /* Label */
      #inputVideo label {
        transform: translatex(-1929px) translatey(-1908px) !important;
      }

    }

    /* Input */
    #form1 input[type=datetime-local] {
      position: relative;
      top: -38px;
      width: 162px !important;
      height: 39px !important;
    }

    /* Label */
    #form1 label:nth-child(9) {
      top: 490px !important;
      bottom: auto !important;
    }

    /* Input */
    #form2 input[type=datetime-local] {
      position: relative;
      top: -52px;
      width: 162px !important;
      height: 36px !important;
    }

    /* Button */
    #form2 button {
      border-color: #f9f9f9 !important;
      color: #020202 !important;
      font-weight: 500;
    }

    @media (min-width:768px) {

      /* Label */
      #form2 label:nth-child(9) {
        transform: translatex(-586px) translatey(-586px) !important;
      }

    }

    /* Qbtn */
    #Qbtn {
      display: none !important;
    }

    /* Abtn */
    #Abtn {
      display: none !important;
    }

    /* Body */
body{
 top:72px;
 position:relative;
}

/* Form1 */
#form1{
 top:1064px !important;
 bottom:auto !important;
}

/* Form2 */
#form2{
 top:1005px !important;
 bottom:auto !important;
}

/* Message input */
#messageInput{
 top:2016px;
 transform:translatex(-772px) translatey(-1932px);
}

/* Send button */
#sendButton{
 top:2005px !important;
 left:-193px;
 transform:translatex(-546px) translatey(-1918px) !important;
 bottom:auto !important;
}

/* Label */
#inputVideo label{
 top:1995px !important;
 bottom:auto !important;
 padding-bottom:20px;
 width:85px;
}

/* Button */
#inputVideo button{
 top:3983px !important;
 bottom:auto !important;
 width:114px !important;
 transform:translatex(-1284px) translatey(-4093px) !important;
}

/* Video input */
#videoIdInput{
 top:5765px;
 position:relative;
 transform:translatex(-1005px) translatey(-5826px) !important;
 left:1095px;
}

/* Input video */
#inputVideo{
 height:63px;
 margin-left:57px;
 max-width:516px;
 top:-618px !important;
 bottom:auto !important;
}

/* Image */
img{
 transform:translatex(600px) translatey(-1089px);
 top:1193px;
}

/* Horizontal Rule */
hr{
 transform:translatex(135px) translatey(100px);
 position:relative;
 left:4px;
 display:none;
}

@media (min-width:768px){

 /* Player */
 #player{
  top:39px;
 }
 
 /* Input video */
 #inputVideo{
  width:534px !important;
  left:51px !important;
  transform:translatex(81px) translatey(-1021px) !important;
  right:auto !important;
 }
 
 /* Label */
 #inputVideo label{
  transform:translatex(-1130px) translatey(-2001px) !important;
 }
 
 /* Image */
 img{
  left:17px;
 }
 
}

/* Label */
#form1 label{
 top:479px !important;
 bottom:auto !important;
 left:-21px;
}

/* Select */
#form1 select{
 top:-23px;
}

/* Input */
#form1 input[type=text]{
 top:-1px;
 left:13px;
}

/* Input */
#form1 input[type=datetime-local]{
 left:2px;
 top:-41px;
}

/* Label */
#form2 label{
 top:595px !important;
 bottom:auto !important;
}

/* Select */
#form2 select{
 top:-8px;
}

/* Input */
#form2 input[type=text]{
 position:relative;
 left:7px;
}

/* Paragraph */
#form1 p{
 font-weight:700;
 font-size:36px;
 color:#1a5fc0;
 text-shadow:rgb(255, 0, 0) -1px 0px 0px, rgb(0, 255, 255) 1px 0px 0px;
}

/* Paragraph */
#form2 p{
 font-size:36px;
 font-weight:600;
 color:#d8e307;
 text-shadow:rgb(255, 255, 255) 0px 1px 1px, rgb(0, 0, 0) 0px -1px 1px;
 font-style:normal;
}






/* styles.css */

body {
  font-family: Arial, sans-serif;
  margin: 0;
  padding: 20px;
}

h1 {
  text-align: center;
}

form {
  max-width: 500px;
  margin: 0 auto;
}

.component {
  display: flex;
  align-items: center;
  margin-bottom: 10px;
}

.component-button {
  flex: 1;
  padding: 10px;
  background-color: #4CAF50;
  color: #fff;
  border: none;
  cursor: pointer;
}

.component-count {
  margin-left: 10px;
  padding: 5px 10px;
  background-color: #ccc;
}

input[type="submit"] {
  display: block;
  width: 100%;
  margin-top: 20px;
  padding: 10px;
  background-color: #4CAF50;
  color: #fff;
  border: none;
  cursor: pointer;
}

input[type="submit"]:hover {
  background-color: #45a049;
}





/* Component */
#trackingForm .component{
 background-color:#12c365;
 color:#000000;
}

/* Component button */
#trackingForm .component:nth-child(12) .component-button{
 top:2119px !important;
 position:relative;
 left:994px !important;
 right:auto !important;
 bottom:auto !important;
 transform:translatex(-993px) translatey(-2120px) !important;
}

/* Component button */
#trackingForm .component .component-button{
 top:2000px !important;
 transform:translatex(-1008px) translatey(-2001px) !important;
}

/* Component button */
#trackingForm .component-button{
 left:1009px !important;
 transform:translatex(-1225px) translatey(-2120px) !important;
}

/* Form2 */
#form2{
 top:1015px !important;
 bottom:auto !important;
}

/* Input */
#trackingForm input{
 position:relative;
 top:-42px;
}

@media (min-width:768px){

 /* Form2 */
 #form2{
  left:110px !important;
  right:auto !important;
  transform:translatex(1149px) translatey(-2104px) !important;
 }
 
 /* Tracking form */
 #trackingForm{
  left:97px !important;
  right:auto !important;
  transform:translatex(1157px) translatey(-471px) !important;
 }
 
}





/* CSS for Component Tracking Form */

/* Container for columns */
.column {
  float: left;
  width: 33.33%; /* Adjust the width as needed */
  padding: 10px;
  box-sizing: border-box;
}

/* Clear float after the columns */
.column:after {
  content: "";
  display: table;
  clear: both;
}

/* Styling for component buttons */
.component {
  margin-bottom: 10px;
}

.component-button {
  display: block;
  width: 100%;
  padding: 10px;
  background-color: #f2f2f2;
  border: none;
  border-radius: 4px;
  text-align: left;
  cursor: pointer;
}

/* Styling for component counts */
.component-count {
  display: inline-block;
  margin-left: 10px;
  padding: 5px 10px;
  background-color: #ddd;
  border-radius: 4px;
}




/* Column */
#trackingForm .column{
 transform:translatex(288px) translatey(18px);
}

/* Column */
#trackingForm .column:nth-child(1){
 position:relative;
 left:-266px;
 width:173px;
}

/* Hvac systems count */
#hvacSystemsCount{
 position:relative;
 left:-3px;
}

/* Column */
#trackingForm .column:nth-child(2){
 position:relative;
 top:-468px;
 left:-17px;
}

#trackingForm .component{
 width:167px;
}

/* Tracking form */
#trackingForm{
 height:566px;
 min-height:587px;
}

/* Input */
#trackingForm input{
 transform:translatex(190px) translatey(-429px) !important;
 top:-25px;
}

/* Roofing system count */
#roofingSystemCount{
 position:relative;
 left:-2px;
}

/* Structural columns count */
#structuralColumnsCount{
 position:relative;
 left:-4px;
}

/* Fire protection systems count */
#fireProtectionSystemsCount{
 position:relative;
 left:-2px;
}

/* Plumbing systems count */
#plumbingSystemsCount{
 position:relative;
 left:-3px;
}

/* Elevators escalators count */
#elevatorsEscalatorsCount{
 position:relative;
 left:-3px;
}

/* Beams count */
#beamsCount{
 transform:translatex(-171px) translatey(-3px);
 top:3px;
}

/* Flooring systems count */
#flooringSystemsCount{
 transform:translatex(-171px) translatey(-3px);
}

/* Electrical systems count */
#electricalSystemsCount{
 transform:translatex(-172px) translatey(-9px);
 left:38px !important;
 right:auto !important;
 top:10px;
}

/* Exterior ridges count */
#exteriorRidgesCount{
 transform:translatex(-171px) translatey(-5px);
 top:5px;
}

/* Cladding supports count */
#claddingSupportsCount{
 transform:translatex(-168px) translatey(4px);
 left:34px !important;
 right:auto !important;
 top:-4px;
}

/* Cladding panels count */
#claddingPanelsCount{
 transform:translatex(-168px) translatey(-3px);
 left:34px !important;
 right:auto !important;
 top:1px;
}

/* Component button */
#trackingForm .column:nth-child(2) .component:nth-child(6) .component-button{
 left:1045px !important;
 right:auto !important;
}

/* Component button */
#trackingForm .column:nth-child(2) .component:nth-child(5) .component-button{
 left:1045px !important;
}

/* Component button */
#trackingForm .column:nth-child(2) .component:nth-child(4) .component-button{
 left:1046px !important;
}

/* Component button */
#trackingForm .column:nth-child(2) .component:nth-child(3) .component-button{
 transform:translatex(-947px) translatey(-2002px) !important;
 left:985px !important;
 right:auto !important;
}

/* Component button */
#trackingForm .column:nth-child(2) .component:nth-child(2) .component-button{
 left:1045px !important;
 right:auto !important;
}

/* Component button */
#trackingForm .column .component .component-button{
 right:auto !important;
 left:1009px !important;
}

/* Component button */
#trackingForm .column:nth-child(2) .component:nth-child(1) .component-button{
 left:1045px !important;
 right:auto !important;
}

/* Beams count, Electrical systems count */
#beamsCount,#electricalSystemsCount{
 position:relative;
 left:36px;
}

/* Flooring systems count, Exterior ridges count, Cladding supports count */
#flooringSystemsCount,#exteriorRidgesCount,#claddingSupportsCount,#claddingPanelsCount{
 position:relative;
 left:36px;
}



/* Column */
#trackingForm .column:nth-child(2){
 transform:translatex(306px) translatey(459px);
}

/* Column */
#trackingForm .column:nth-child(3){
 position:relative;
 top:-495px;
 left:-252px;
}

/* Beams count, Flooring systems count, Electrical systems count, Exterio */
#beamsCount,#flooringSystemsCount,#electricalSystemsCount,#exteriorRidgesCount,#claddingSupportsCount,#claddingPanelsCount{
 left:47px !important;
 transform:translatex(-51px) translatey(-3px);
}

/* Structural columns count, Hvac systems count, Fire protection systems */
#structuralColumnsCount,#hvacSystemsCount,#fireProtectionSystemsCount,#plumbingSystemsCount,#elevatorsEscalatorsCount{
 transform:translatex(-128px) translatey(0px);
}

/* Roofing system count */
#roofingSystemCount{
 transform:translatex(-131px) translatey(-4px);
}




/* Column */
#trackingForm .column:nth-child(3){
 left:-263px;
 top:-484px !important;
 bottom:auto !important;
}

/* Column */
#trackingForm .column:nth-child(2){
 left:-33px;
 top:-459px !important;
 bottom:auto !important;
}

/* Input */
#trackingForm input{
 top:-56px;
 background-color:#f6c241;
 color:#000000;
 box-shadow:0px 0px 1px 0px #000000;
 border-top-left-radius:5px;
 border-top-right-radius:5px;
 border-bottom-left-radius:5px;
 border-bottom-right-radius:5px;
}

/* Tracking form */
#trackingForm{
 background-image:linear-gradient(to right, #8e9eab 0%, #eef2f3 100%);
 border-top-left-radius:20px;
 border-top-right-radius:20px;
 border-bottom-left-radius:20px;
 border-bottom-right-radius:20px;
 border-color:#070707;
 border-style:solid;
 border-width:1px;
 box-shadow:2px 3px 2px 2px #212529;
}

/* Paragraph */
#trackingForm p{
 font-size:36px;
 font-weight:600;
 text-shadow:rgb(255, 255, 255) 0px 1px 1px, rgb(0, 0, 0) 0px -1px 1px;
 color:#ffffff;
 line-height:0.5em;
}

/* Column */
#trackingForm .column{
 top:-465px !important;
 bottom:auto !important;
}


/* CSS for Component Tracking Form */

/* ... previous CSS code ... */

/* Styling for the submit button */
input[type="submit"] {
  display: block;
  width: 100%;
  margin-top: 20px;
  padding: 10px;
  background-color: #af904c;
  color: #fff;
  border: none;
  cursor: pointer;
  transition: background-color 0.3s ease; /* Add transition effect */
}

/* Hover styles for the submit button */
input[type="submit"]:hover {
  background-color: #b44f20;
}





/* Latest save */
#latestSave{
 position:relative;
 top:-1000px;
 left:191px;
}
h2 {
    font-size: 24px;
    font-weight: bold;
    margin-bottom: 10px;
  }

  #latestSave {
    background-color: #f2f2f2;
    padding: 20px;
    border-radius: 5px;
  }


  table {
      border-collapse: collapse;
      width: 100%;
    }

    th, td {
      border: 1px solid #ddd;
      padding: 8px;
      text-align: left;
    }

    th {
      background-color: #f2f2f2;
    }

    /* Button */
#trackingForm button:nth-child(4){
 top:990px !important;
 left:1017px;
 transform:translatex(-1017px) translatey(-1461px) !important;
 bottom:auto !important;
 background-color:#f6b341 !important;
}

/* Component counts table */
#componentCountsTable{
 position:relative;
 top:-752px;
}

/* Table styles */
#componentCountsTable {
  width: 100%;
  border-collapse: collapse;
}

#componentCountsTable th,
#componentCountsTable td {
  padding: 8px;
  text-align: left;
  border-bottom: 1px solid #ddd;
}

#componentCountsTable th {
  background-color: #f2f2f2;
}

/* Hover effect */
#componentCountsTable tbody tr:hover {
  background-color: #f5f5f5;
}


/* Latest save */
#latestSave{
 display:none;
}

/* Component counts table */
#componentCountsTable{
 top:-1017px;
 width:466px;
 transform:translatex(801px) translatey(-700px);
}

/* Label */
#form1 label:nth-child(10){
 top:469px !important;
 bottom:auto !important;
}



/* Table Data */
#componentCountsFooter tr td{
 background-color:#187ddc;
 color:#eaeaea;
 font-weight:700;
}



/* Video button */
.video-buttons .video-button{
 background-color:#99daf4 !important;
 transform:translatex(292px) translatey(-2916px) !important;
 border-style:none !important;
 box-shadow:1px 0px 4px 1px #070707;
 width:132px;
 top:9px !important;
 bottom:auto !important;
 left:-245px;
}

/* Video button */
.video-buttons .video-button:nth-child(2){
 transform:translatex(324px) translatey(-2916px) !important;
 height:102px;
 left:-271px;
}

/* Image */
.video-buttons .video-button img{
 height:89px;
 top:1194px;
 transform:translatex(-22px) translatey(-1199px) !important;
 width:104% !important;
 background-color:#ffffff;
 box-shadow:0px 1px 0px 1px #fcfcfc;
 border-style:none;
 border-width:0px;
 border-top-left-radius:5px;
 border-top-right-radius:5px;
 border-bottom-left-radius:5px;
 border-bottom-right-radius:5px;
}

/* Video button */
.video-buttons .video-button:nth-child(1){
 height:102px;
}

/* Image */
.video-buttons .video-button:nth-child(1) img{
 width:121% !important;
 max-width:120px;
 transform:translatex(-15px) translatey(-1191px);
}

@media (min-width:768px){

 /* Image */
 .video-buttons .video-button img{
  left:18px;
 }
 
}

/* Video button */
.video-buttons .video-button{
 top:84px !important;
 bottom:auto !important;
}



/* Component counts table */
#componentCountsTable{
 top:-891px;
}

/* Tracking form */
#trackingForm{
 top:-538px !important;
 bottom:auto !important;
}

/* Form1 */
#form1{
 top:1135px !important;
}

/* Form2 */
#form2{
 top:1079px !important;
}

.chat-container {
      height: 300px;
      overflow-y: scroll;
      border: 1px solid #ccc;
      padding: 10px;
    }


    /* Message inputt */
#messageInputt{
 border-style:solid;
 border-width:1px;
}


/* Chat areaa */
#chatArea2{
 position:relative;
 left:94px;
 top:-2000px;
 border-style:solid;
 border-width:1px;
 width:767px;
 height:78px;
 transform:translatex(327px) translatey(2039px);
}

/* Button */
button:nth-child(34){
 transform:translatex(-291px) translatey(-797px) !important;
}


/* Message input */
#messageInput{
 left:400px;
 transform:translatex(-282px) translatey(-1968px);
}

/* Chat area */
#chatArea2{
 transform:translatex(58px) translatey(2247px);
}

/* Send button */
#sendButton{
 left:162px;
 transform:translatex(-577px) translatey(-1958px) !important;
}

/* Send button */
#sendButton{
 left:-178px;
 transform:translatex(-577px) translatey(-1922px) !important;
}

/* Message input */
#messageInput{
 left:5px;
 transform:translatex(-777px) translatey(-1945px);
}

/* Chat area */
#chatArea{
 transform:translatex(-1672px) translatey(1088px);
}

#chatAreaa {
      height: 300px;
      overflow-y: scroll;
      border: 1px solid #ccc;
      padding: 10px;
    }

    * {
	margin: 0;
	padding: 0;
	box-sizing: border-box;
}

body {
	font-family: 'Roboto', sans-serif;
	background-color: #f8f8f8;
	color: #333;
	font-size: 16px;
}

header {
	background-color: #008000;
	color: #fff;
	padding: 20px;
	text-align: center;
}

.container {
	max-width: 800px;
	margin: 0 auto;
	padding: 20px;
}

ul#messages {
	list-style: none;
	margin: 0;
	padding: 0;
}

ul#messages li {
	padding: 10px;
	margin-bottom: 10px;
	background-color: #f2f2f2;
	border-radius: 8px;
}

form#messageForm {
	display: flex;
	margin-top: 20px;
}

form#messageForm input#m {
	flex-grow: 1;
	padding: 10px;
	border: none;
	border-radius: 8px;
	background-color: #fff;
	color: #333;
}

form#messageForm button {
	padding: 10px 20px;
	border: none;
	border-radius: 8px;
	background-color: #008000;
	color: #fff;
	font-weight: bold;
	cursor: pointer;
	transition: background-color 0.3s ease;
}

form#messageForm button:hover {
	background-color: #006600;
}

/* Heading */
#intro h1{
    height:61px;
    transform:translatex(43px) translatey(10px);
    text-align:center;
    text-decoration:none;
    text-shadow:rgb(255, 255, 255) 0px 1px 1px, rgb(0, 0, 0) 0px -1px 1px;
    padding-top:9px;
    background-color:#4697fb;
    background-image:linear-gradient(to right, #000046 0%, #1cb5e0 100%);
    color:#ffffff;
    width:1223px;
   }
   
   /* Form Division */
   form{
    position:relative;
    top:124px;
    min-height:40px;
    transform:translatex(493px) translatey(758px);
    width:16%;
   }
   
   /* Input */
   #m{
    border-style:solid;
    border-width:1px;
    background-color:#ffffff;
    width:409px;
    height:31px;
    border-top-left-radius:13px;
    border-top-right-radius:13px;
    border-bottom-left-radius:13px;
    border-bottom-right-radius:13px;
    box-shadow:1px 0px 3px 1px #8bd6e3;
    position:relative;
    left:-26px;
   }
   
   /* Button */
   form button{
    background-color:#1670de;
    border-style:solid;
    border-width:1px;
    border-top-left-radius:5px;
    border-top-right-radius:5px;
    border-bottom-left-radius:5px;
    border-bottom-right-radius:5px;
    color:#ffffff;
    width:60px;
    height:30px;
    border-color:#000105;
    position:relative;
    left:2px;
    transform:translatex(412px) translatey(-30px);
   }
   
   /* List Item */
   #messages li{
    position:relative;
    top:16px;
    transform:translatex(368px) translatey(7px);
    width:29%;
    left:-1px;
   }
   
   /* Button */
form button{
    left:25px;
    transform:translatex(0px) translatey(0px);
   }
   
   /* Form Division */
   form{
    width:518px;
    transform:translatex(463px) translatey(751px);
    position:fixed;
    top:297px;
    bottom:auto !important;
   }
   
   /* Input */
   #m{
    left:19px;
   }
   
   /* List Item */
   #messages li{
    width:267px;
    transform:translatex(88px) translatey(12px);
   }
   
   @media (max-width:992px){
   
    /* Form Division */
    form{
     left:-324px;
     top:283px;
    }
    
    /* Heading */
    #intro h1{
     width:690px;
    }
    
    /* List Item */
    #messages li{
     transform:translatex(44px) translatey(5px);
     width:282px;
    }
    
   }

   /* Input */
#m{
 top:1992px;
 left:-211px;
 width:409px !important;
 height:40px;
 transform:translatex(-854px) translatey(-186px) !important;
}

/* Button */
form:nth-child(32) button{
 top:5000px !important;
 left:1374px;
 padding-top:4px;
 width:66px !important;
 transform:translatex(-1984px) translatey(-3232px) !important;
 height:34px;
}

/* Body */
body{
 top:106px;
}

/* Intro */
#intro{
 position:relative;
 left:427px;
 top:-1771px;
 visibility:visible;
 height:74px;
 transform:translatex(-384px) translatey(-541px);
 width:516px;
 background-color:#141414;
 color:#ffffff;
 font-size:18px;
}

/* Chat area */
#chatArea{
 display:none;
}

/* Column */
#trackingForm .column:nth-child(3){
 top:-248px !important;
 bottom:auto !important;
}

/* Button */
#trackingForm button:nth-child(4){
 top:1344px !important;
 padding-top:1px;
}

/* Column */
#trackingForm .column{
 width:203px !important;
 top:-471px !important;
 height:302px !important;
}

/* Column */
#trackingForm .column:nth-child(2){
 top:-401px !important;
 width:208px;
 height:284px !important;
}

/* Button */
#form1 button{
 padding-top:0px !important;
}

/* Button */
#form2 button{
 padding-top:2px !important;
}

/* Speaker form */
#speakerForm{
 display:none;
}

/* Heading */
#intro h1{
 background-color:#020202;
}

/* Messages */
#messages{
 transform:translatex(23px) translatey(-2192px);
 width:651px;
 padding-top:0px;
 min-height:83px;
 position:relative;
 top:2px;
}

/* Button */
form button{
 transform:translatex(-1983px) translatey(-3137px) !important;
}

@media (min-width:768px){

 /* Speaker form */
 #speakerForm{
  left:58px !important;
  right:auto !important;
  transform:translatex(86px) translatey(692px) !important;
 }
 
 /* Form1 */
 #form1{
  position:relative;
 }
 
 /* Form2 */
 #form2{
  position:relative;
 }
 
 /* Tracking form */
 #trackingForm{
  position:relative;
 }
 
}

@media (min-width:993px){

 /* Form Division */
 form{
  top:173px !important;
 }
 
 /* Form1 */
 #form1{
  top:1119px !important;
 }
 
 /* List Item */
 #messages li{
  transform:translatex(6px) translatey(-92px);
 }
 
 /* Form Division */
 form:nth-child(32){
  top:237px !important;
 }
 
}

.message-list {
  list-style: none;
  margin: 0;
  padding: 0;
  overflow-y: scroll;
  height: calc(100vh - 100px);
}

/* Messages */
#messages{
 height:495px;
 transform:translatex(21px) translatey(-2302px);
 width:25% !important;
}

/* Messages */
#messages{
 height:495px;
 transform:translatex(21px) translatey(-2302px);
 width:24% !important;
}

/* List Item */
#messages li{
 top:111px;
}



/* List */
#list{
 text-align:left;
 padding-right:15px !important;
 padding-top:15px !important;
 padding-bottom:15px !important;
 padding-left:15px !important;
}

/* Intro */
#intro{
 top:-1780px;
 left:419px;
 display:none;
}

/* Messages */
#messages{
 top:66px;
 left:8px;
}

@media (min-width:993px){

 /* List */
 #list{
  width:326px !important;
 }
 
}

/* Input */
#m{
 left:1198px;
 top:-872px;
 transform:translatex(-1155px) translatey(-1319px) !important;
}

/* Button */
#btn-sdn{
 top:584px !important;
 transform:translatex(60px) translatey(-2778px) !important;
}



/* Button */
#btn-sdn{
 min-height:49px;
 height:49px;
 background-color:#2569de !important;
 border-style:solid;
 border-width:1px;
 border-color:#1f588e !important;
 border-top-left-radius:10px;
 border-top-right-radius:10px;
 border-bottom-left-radius:10px;
 border-bottom-right-radius:10px;
 transform:translatex(60px) translatey(-2955px) !important;
}

/* Messages */
#messages{
 top:-82px;
 border-width:1px;
 border-color:#333a41;
 border-right-width:2px;
}

/* Video button */
.video-buttons .video-button{
 top:131px !important;
 bottom:auto !important;
}

/* Input */
#m{
 transform:translatex(-1145px) translatey(-1495px) !important;
}

/* Video button */
.video-buttons .video-button{
 min-height:105px;
 height:105px;
}

/* Zoom out */
#zoomOutBtn{
 transform:translatex(-303px) translatey(-2977px) !important;
}

/* Screenshot */
#screenshotBtn{
 transform:translatex(-86px) translatey(-2893px) !important;
 top:805px !important;
 bottom:auto !important;
 left:-12px;
}


/* Zoom */
#zoomInBtn{
 transform:translatex(-220px) translatey(-2928px) !important;
 left:9px;
}

.background-image {
  background-image: url("/views/home/STARSHIP_STARBASE_Desktop.jpg");
  background-size: cover;
  background-position: center;
  background-repeat: no-repeat;
  width: 100%;
  height: 100vh;
}

/* Background image */
.background-image{
 background-image:url("https://www.spacex.com/vehicles/starship/assets/images/STARSHIP_STARBASE_Desktop.jpg");
 background-color:rgba(0,0,0,0);
 transform:translatex(1074px) translatey(-2903px);
 position:relative;
 top:-559px;
 backdrop-filter:blur(1.9px);
 box-shadow:-25px 0px 9px 0px #212529;
 background-blend-mode:screen;
 background-clip:border-box;
 background-repeat:repeat;
 background-position-y:48%;
 padding-bottom:29px;
 min-height:1188px;
 display:none;
}

/* Body */
body{
 background-image:url("https://www.spacex.com/vehicles/starship/assets/images/STARSHIP_STARBASE_Desktop.jpg");
 background-size:cover;
}

/* Component counts table */
#componentCountsTable{
 color:#ffffff;
 font-weight:700;
}



  </style>
</head>
<script src="https://www.youtube.com/iframe_api"></script>

<!-- <link rel="stylesheet" type="text/css" href="views/home/forms.css"> -->

<meta name="viewport" content="width=device-width, initial-scale=1.0">
<!-- 
<link rel="stylesheet" href="//capp.nicepage.com/9afaf170b86701c5f7507f813250e585a6b39559/nicepage.css" media="screen">
<link rel="stylesheet" href="/views/home/nicepage-site.css" media="screen">
<link rel="stylesheet" href="/views/home/Accueil.css" media="screen">
    <script class="u-script" type="text/javascript" src="//capp.nicepage.com/assets/jquery-3.5.1.min.js" defer=""></script>
    <script class="u-script" type="text/javascript" src="//capp.nicepage.com/9afaf170b86701c5f7507f813250e585a6b39559/nicepage.js" defer=""></script>
    <meta name="generator" content="Nicepage 5.5.0, nicepage.com">
    <meta name="referrer" content="origin">
    <link id="u-theme-google-font" rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto:100,100i,300,300i,400,400i,500,500i,700,700i,900,900i|Open+Sans:300,300i,400,400i,500,500i,600,600i,700,700i,800,800i">
     -->


<link rel="stylesheet" href="https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">
<script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0/dist/css/bootstrap.min.css">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@4.5.0/dist/js/bootstrap.min.js"></script>



<script type="text/javascript" src="./content.js"></script>




<!-- <link href="https://vjs.zencdn.net/7.15.0/video-js.min.css" rel="stylesheet">
<script src="https://vjs.zencdn.net/7.15.0/video.min.js"></script> -->

<script src="/socket.io/socket.io.js"></script>
<script src="https://cdn.jsdelivr.net/npm/uuid@8.3.2/dist/umd/uuidv4.min.js"></script>
<!-- Include the CSS file -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">

<!-- Include the JavaScript file -->
<script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>

<script src="https://cdn.socket.io/4.6.0/socket.io.min.js"
  integrity="sha384-c79GN5VsunZvi+Q/WObgk2in0CbZsHnjEqvFxC5DxHn9lTfNce2WW6h2pH6u/kF+" crossorigin="anonymous"></script>

<!-- <script src="https://cdn.socket.io/4.0.1/socket.io.min.js"></script> -->


<body>
  <h1>
    <%= title %>
  </h1>
  <img src="<%= thumbnailUrl %>">
  <script src="https://www.youtube.com/player_api"></script>
  <script src="https://api.trello.com/1/client.js?key=3da0322f390be3d7e919f662025de4ef"></script>

  <!-- <iframe id="video-player" width="560" height="315" src="https://www.youtube.com/embed/<%= videoId %>" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen></iframe> -->
  <iframe id="player" width="640" height="360" src="https://www.youtube.com/embed/<%= videoId %>?enablejsapi=1"
    frameborder="0" allowfullscreen=""></iframe>
  <!-- <iframe id="player" width="640" height="360" src="https://www.youtube.com/embed/<%= videoId %>?enablejsapi=1&controls=0&disablekb=1"
      frameborder="0" allowfullscreen=""></iframe> -->
  <!-- <iframe id="player" width="640" height="360" src="https://www.youtube.com/embed/<%= videoId %>?enablejsapi=1&controls=0&disablekb=1"
        frameborder="0" allowfullscreen=""></iframe>
       -->
  
  <!-- <input type="text" id="textInput">
  <button onclick="displayText()">Send</button>
  <div id="floatingDiv" class="floating-textarea"></div>

   -->



  <div id="chatArea" class="floating-textarea"></div>
  <!-- <input type="text" id="messageInput" placeholder="Enter your message">
  <button id="sendButton">Send</button>
 -->

  <h1>Enter the number of speakers</h1>

  <form id="speakerForm">
    <input type="number" id="speakerCount" name="speakerCount">
    <button type="submit">Submit</button>
  </form>

  <hr>
  <!-- <label for="numSpeakers">Number of Speakers:</label> -->
  <!-- <input type="number" id="numSpeakers" name="numSpeakers" value="2">
  <button id="createButtonsButton" onclick="createButtons();this.disabled=true;this.style.background='grey';">Create
    Buttons</button> -->

  <div id="buttons"></div>
  <div id="player"></div>

  <!-- <button id="play-button" >Play</button>
  <button id="pause-button">Pause</button> -->

  <button id="play-button">Play</button>
  <button id="pause-button">Pause</button>
  <button id="controlButton">Take Control</button>
  


  <div class="stream-deck">
    <div class="stream-deck__key stream-deck__key--1">
      <div class="stream-deck__key__label">1</div>
    </div>
    <div class="stream-deck__key stream-deck__key--2">
      <div class="stream-deck__key__label">2</div>
    </div>
    <div class="stream-deck__key stream-deck__key--3">
      <div class="stream-deck__key__label">3</div>
    </div>
    <div class="stream-deck__key stream-deck__key--4">
      <div class="stream-deck__key__label">4</div>
    </div>
    <div class="stream-deck__key stream-deck__key--5" id="stream-deck-5">
      <div class="stream-deck__key__label">Cranes</div>
    </div>
    <div class="stream-deck__key stream-deck__key--6">
      <div class="stream-deck__key__label">6</div>
    </div>
    <div class="stream-deck__key stream-deck__key--7">
      <div class="stream-deck__key__label">7</div>
    </div>
    <div class="stream-deck__key stream-deck__key--8">
      <div class="stream-deck__key__label">8</div>
    </div>
    <div class="stream-deck__key stream-deck__key--9">
      <div class="stream-deck__key__label">9</div>
    </div>
    <div class="stream-deck__key stream-deck__key--10" id="stream-deck-10">
      <div class="stream-deck__key__label">10</div>
    </div>
    <div class="stream-deck__key stream-deck__key--11">
      <div class="stream-deck__key__label">11</div>
    </div>
    <div class="stream-deck__key stream-deck__key--12">
      <div class="stream-deck__key__label">12</div>
    </div>
  </div>
 





  <form id="form1">
    <p>
      Cranes
    </p>
    <label for="selectLocation1">Select Location:</label>
    <select id="selectLocation1" name="selectLocation1">
      <option value="Launch Site">Launch Site</option>
      <option value="Production Site">Production Site</option>
      <option value="Massey's">Massey's</option>
      <option value="Sanchez">Sanchez</option>
    </select>

    <label for="Reference-input1">Reference:</label>
    <input type="text" id="Reference-input1" name="reference" required>

    <label for="Payload-input1">Payload:</label>
    <input type="text" id="Payload-input1" name="payload" required>

    <label for="Destination-input1">Destination:</label>
    <input type="text" id="Destination-input1" name="destination" required>

    <label for="TimeDate-input1">Time and Date:</label>
    <input type="datetime-local" id="TimeDate-input1" name="timedate" required>

    <button type="submit">Submit</button>
  </form>
  <script>



  </script>
  <form id="form2">
    <p>
      SPMT'S
    </p>
    <label for="selectLocation2">Select Location</label>
    <select id="selectLocation2" name="selectLocation">
      <option value="Massey's">Massey's</option>
      <option value="Production Site">Production Site</option>
      <option value="Launch Site">Launch Site</option>
      <option value="Sanchez">Sanchez</option>
    </select>
    <label for="Reference-input2">Reference</label>
    <input type="text" id="Reference-input2" name="Reference-input" required>
    <label for="Destination-input2">Destination</label>
    <input type="text" id="Destination-input2" name="Destination-input" required>
    <label for="Payload-input2">Payload</label>
    <input type="text" id="Payload-input2" name="Payload-input" required>
    <label for="TimeDate-input2">Date</label>
    <!-- <input type="text" id="TimeDate-input2" name="TimeDate-input"> -->
    <input type="datetime-local" id="TimeDate-input2" name="TimeDate-input" required>

    <button type="submit">Submit</button>
  </form>


<script>
// // Get the form element
// var selectVideo = document.getElementById("selectVideo");

// // Attach an event listener to the select element's change event
// selectVideo.addEventListener("change", async (event) => {
//   // Retrieve the selected videoId value from the select element
//   var videoId = selectVideo.value;

//   try {
//     const apiResponse = await fetch(`/main?videoId=${videoId}`);

//     if (apiResponse.ok) {
//       // Call your function to handle the form submission asynchronously
//       console.log(videoId);
//     } else {
//       console.error('Failed to fetch data:', apiResponse.status, apiResponse.statusText);
//     }
//   } catch (error) {
//     console.error('An error occurred while fetching data:', error);
//   }
// });

</script>

  <h1>MEGAbay Component Tracking</h1>
  
  <form id="trackingForm">
  <p>
Megabay 2

  </p>
    <div class="column">
      <!-- Structural Columns -->
      <div class="component">
        <button class="component-button" type="button" onclick="incrementCount('structuralColumns')">Structural Columns</button>
        <span class="component-count" id="structuralColumnsCount">0</span>
      </div>
    
      <!-- Roofing System -->
      <div class="component">
        <button class="component-button" type="button" onclick="incrementCount('roofingSystem')">Roofing System</button>
        <span class="component-count" id="roofingSystemCount">0</span>
      </div>
      
      <!-- HVAC Systems -->
      <div class="component">
        <button class="component-button" type="button" onclick="incrementCount('hvacSystems')">HVAC Systems</button>
        <span class="component-count" id="hvacSystemsCount">0</span>
      </div>
      
      <!-- Fire Protection Systems -->
      <div class="component">
        <button class="component-button" type="button" onclick="incrementCount('fireProtectionSystems')">Fire Protection Systems</button>
        <span class="component-count" id="fireProtectionSystemsCount">0</span>
      </div>
      
      <!-- Plumbing Systems -->
      <div class="component">
        <button class="component-button" type="button" onclick="incrementCount('plumbingSystems')">Plumbing Systems</button>
        <span class="component-count" id="plumbingSystemsCount">0</span>
      </div>
      
      <!-- Elevators and Escalators -->
      <div class="component">
        <button class="component-button" type="button" onclick="incrementCount('elevatorsEscalators')">Elevators and Escalators</button>
        <span class="component-count" id="elevatorsEscalatorsCount">0</span>
      </div>
    </div>
    
    <div class="column">
      <!-- Beams -->
      <div class="component">
        <button class="component-button" type="button" onclick="incrementCount('beams')">Beams</button>
        <span class="component-count" id="beamsCount">0</span>
      </div>
    
      <!-- Flooring Systems -->
      <div class="component">
        <button class="component-button" type="button" onclick="incrementCount('flooringSystems')">Flooring Systems</button>
        <span class="component-count" id="flooringSystemsCount">0</span>
      </div>
      
      <!-- Electrical Systems -->
      <div class="component">
        <button class="component-button" type="button" onclick="incrementCount('electricalSystems')">Electrical Systems</button>
        <span class="component-count" id="electricalSystemsCount">0</span>
      </div>
      
      <!-- Exterior Ridges -->
      <div class="component">
        <button class="component-button" type="button" onclick="incrementCount('exteriorRidges')">Exterior Ridges</button>
        <span class="component-count" id="exteriorRidgesCount">0</span>
      </div>
      
      <!-- Cladding Supports -->
      <div class="component">
        <button class="component-button" type="button" onclick="incrementCount('claddingSupports')">Cladding Supports</button>
        <span class="component-count" id="claddingSupportsCount">0</span>
      </div>
      
      <!-- Cladding Panels -->
      <div class="component">
        <button class="component-button" type="button" onclick="incrementCount('claddingPanels')">Cladding Panels</button>
        <span class="component-count" id="claddingPanelsCount">0</span>
      </div>
    </div>
    <button type="submit">Submit</button>

    <!-- <input type="submit" value="Submit"> -->
  </form>

  <h2>Latest Save</h2>
  <div id="latestSave"></div>


  <h2>Component Counts Table</h2>
  <table id="componentCountsTable">
    <thead>
      <tr>
        <th>Component</th>
        <th>Count</th>
      </tr>
    </thead>
    <tbody id="componentCountsBody">
      <!-- Table rows will be dynamically added here -->
    </tbody>
    <tfoot id="componentCountsFooter">
      <!-- Table footer content -->
    </tfoot>
  </table>
<!-- HTML -->
<h1>Select a Video</h1>
<div class="video-buttons">
  <button class="video-button" data-video-id="tS2PHJmvJzo">
     <img src="https://i.ytimg.com/vi/tS2PHJmvJzo/hqdefault_live.jpg?sqp=-oaymwEcCNACELwBSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&rs=AOn4CLDIE-BX3D6vy1kqh_Ewq1VmGKi16g" alt="Video 1">
  </button>
  <button class="video-button" data-video-id="A8QLrVAOE1k">
    <img src="https://i.ytimg.com/vi/A8QLrVAOE1k/hqdefault_live.jpg?sqp=-oaymwEcCNACELwBSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&rs=AOn4CLCHgis4qaAhPyE8vseBurVjHQmArg" alt="Video 2">
  </button>
  <button class="video-button" data-video-id="Rg7kw-KLDL8">
    <img src="https://i.ytimg.com/vi/Rg7kw-KLDL8/hqdefault_live.jpg?sqp=-oaymwEcCNACELwBSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&rs=AOn4CLDyb7sN-wKj_sCp8siYjjObNMSWSg" alt="Video 2">
  </button>
  <button class="video-button" data-video-id="IQV0DlS1Ew0">
    <img src="https://i.ytimg.com/vi/IQV0DlS1Ew0/hqdefault_live.jpg?sqp=-oaymwEcCNACELwBSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&rs=AOn4CLCyZX7NsQ2ggYLEJsqsWK_HAPkQ8A" alt="Video 2">
  </button>

  <button class="video-button" data-video-id="7SOJCiT42H0">
    <img src="https://i.ytimg.com/vi/7SOJCiT42H0/hqdefault_live.jpg?sqp=-oaymwEcCNACELwBSFXyq4qpAw4IARUAAIhCGAFwAcABBg==&rs=AOn4CLDvU-Y-4zVc9jLs9OXCw92F8UP7_A" alt="Video 2">
  </button>
</div>
<!-- <div id="player"></div> -->
<!-- 
<div id="sidebar">
  <button onclick="zoomIn()">Zoom In</button>
  <button onclick="zoomOut()">Zoom Out</button>
</div> -->

<div id="player-container">
  <div id="player"></div>
</div>
<div id="sidebar">
  <button onclick="zoomIn()">Zoom In</button>
  <button onclick="zoomOut()">Zoom Out</button>
</div>



<!-- <button id="screenshotBtn">Take Screenshot</button>
<button id="zoomInBtn">Zoom In</button>
<button id="zoomOutBtn">Zoom Out</button>  -->


<div id="intro"></div>

<ul id="messages" class="message-list"></ul>
<div class="background-image"></div>

<!-- <img src="/views/home/STARSHIP_STARBASE_Desktop.jpg"> -->

<!-- <source type="video/mp4" src="./assets/media/WebsiteStarshipStack_Anim_Render_Desktop_6.mp4"> -->
<!-- <form action=""> -->

  
  <input id="m" placeholder="Enter your message..." autocomplete="off" required />
  <button id="btn-sdn">Send</button>
<!-- </form> -->

<script>

  
  async function getSessionUsername() {
  try {
    const response = await fetch(`https://starbase-tracking-tool.onrender.com/api/getSessionUsername`);
    const data = await response.json();
    const username = data.username;
    console.log('Session username retrieved:', username);
    return username;
  } catch (error) {
    console.error('Error retrieving session username:', error);
    return null;
  }
}getSessionUsername()
  .then((username) => {
    console.log(username);
    const socket = io();

    socket.emit('joining msg', username);

    $(document).ready(function() {
      // Handle receiving chat history
      socket.on('chat history', function(messages) {
        // Clear existing messages
        $('#messages').empty();

        // Display chat history as a conversation
        messages.forEach(function(message) {
          const sender = message.sender;
          const text = message.text;
          console.log("chat history", sender, message);

          $('#messages').append($('<li>').text(`${sender}: ${text}`));
        });

        scrollToBottom();
      });

      // Handle receiving new messages
      socket.on('chat message', function(message) {
        const sender = message.sender;
        const text = message.text;

        console.log("chat", message);
        $('#messages').append($('<li>').text(`${sender}: ${text}`));
        scrollToBottom();
      });

      // Handle sending messages
      $('#m').keyup(function(event) {
        if (event.keyCode === 13) {
          event.preventDefault();
          const msg = $(this).val().trim(); // Trim the message to remove leading/trailing white spaces
          if (msg !== '') { // Check if the message is not empty
            socket.emit('chat message', msg);
            $(this).val('');
            scrollToBottom();
          }
          return false;
        }
      });

      $('#btn-sdn').click(function(e) {
        e.preventDefault();
        const msg = $('#m').


    var heading = document.createElement('h1');
    heading.textContent = 'ChatRoom';
    var introDiv = document.getElementById('intro');
    introDiv.appendChild(heading);

    console.log(username);
  })
  .catch((error) => {
    console.error('Error retrieving session username:', error);
  });

</script>


</script>
  <script>
   
  

    // document.addEventListener('selectionchange', () => {
    //   const selection = window.getSelection().toString();

    //   if (selection) {
    //     const range = window.getSelection().getRangeAt(0);
    //     const rect = range.getBoundingClientRect();
    //     const top = rect.top + window.pageYOffset - qbtn.offsetHeight - 5;
    //     const left = rect.left + window.pageXOffset + (rect.width / 2) - (qbtn.offsetWidth / 2);

    //     qbtn.style.top = `${top}px`;
    //     qbtn.style.left = `${left}px`;
    //     qbtn.style.display = 'block';

    //     abtn.style.top = `${top}px`;
    //     abtn.style.left = `${left + qbtn.offsetWidth + 10}px`;
    //     abtn.style.display = 'block';
    //   } else {
    //     qbtn.style.disply = 'none';
    //     abtn.style.display = 'none';
    //   }
    // });


    const url_ngrok = "https://starbase-tracking-tool.onrender.com/"
    // const url_ngrok = "https://starbase-tracking-tool.onrender.com"
    // Connect to the Socket.IO server
    const socket = io.connect(url_ngrok);
    // Your code here    
    const CONTROLLER_NAME = 'zack';
    // Connect to the server with the user's name as a query parameter
    const sockett = io.connect(url_ngrok, { query: { name: CONTROLLER_NAME } });
    socket.on('connect', () => {
      console.log('Connected to server:', sockett.id);
    });

    // const chatArea = document.getElementById('chatArea');
    // const messageInput = document.getElementById('messageInput');

    // // Function to display a new message in the chat area
    // function displayMessage(message) {
    //   const messageElement = document.createElement('p');
    //   messageElement.textContent = message.text; // Access the 'text' property of the message object
    //   chatArea.appendChild(messageElement);
    //   chatArea.scrollTop = chatArea.scrollHeight; // Scroll to the bottom
    //   console.log(message);
    // }

 
    // // Function to send a message to the server
    // function sendMessage() {
    //   const message = messageInput.value.trim();

    //   if (message !== '') {
    //     // Emit the message to the server
    //     socket.emit('newMessage', message);

    //     // Clear the message input field
    //     messageInput.value = '';
    //   }
    // }

    // // Handle receiving chat messages from the server
    // socket.on('newMessage', (message) => {
    //   displayMessage(message); // Display the received message
    // });

    // // Handle button click event
    // const sendButton = document.getElementById('sendButton');
    // sendButton.addEventListener('click', sendMessage);

    // // Handle Enter key press event in the message input field
    // messageInput.addEventListener('keydown', (event) => {
    //   if (event.key === 'Enter') {
    //     event.preventDefault(); // Prevent line break in the input field
    //     sendMessage(); // Send the message
    //   }
    // });


    // // Handle incoming messages from the server for textEle
    // socket.on('message', (data) => {
    //   if (data.type === 'file') {
    //     // Update the contents of the textarea
    //     textEle.value = data.content;
    //   }
    // });

    // // Handle incoming messages from the server for textEle2
    // socket.on('message', (data) => {
    //   if (data.type === 'file2') {
    //     // Update the contents of the textarea
    //     textEle2.value = data.content;
    //   }
    // });
    // Handle user input in the textarea for textEle
   
    // add event listener to form submit event
    // myForm.addEventListener('submit', postEvent);
//     var videoIdInput = document.getElementById('selectVideo');
// var videoId = videoIdInput.value;


getSessionUsername()
  .then((username) => {
    var videoButtons = document.getElementsByClassName('video-button');
    for (var i = 0; i < videoButtons.length; i++) {
      videoButtons[i].addEventListener('click', function(event) {
        event.preventDefault(); // prevent the default form submission behavior

        var videoId = event.currentTarget.getAttribute('data-video-id');
        window.location.href = '/main/' + videoId + `/${username}`;
      });
    }
    // Use the retrieved username here
    console.log(username);
  })
  .catch((error) => {
    console.error('Error retrieving session username:', error);
  });



// Load the YouTube Player API script// JavaScript
document.addEventListener('DOMContentLoaded', () => {
  
  var tag = document.createElement('script');
  tag.src = 'https://www.youtube.com/iframe_api';
  var firstScriptTag = document.getElementsByTagName('script')[0];
  firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

  // var zoomLevel = 100; // Initial zoom level

  var player;

  // Function to handle button click event
  async function handleButtonClick(event) {
    const username = await getSessionUsername();
console.log(username);
    var videoId = event.target.parentElement.getAttribute('data-video-id');
    fetch(`https://starbase-tracking-tool.onrender.com/main/${videoId}`)
      .then(response => response.json())
      .then(data => {
        console.log(data)
        // Update the player with the new videoId
        player.loadVideoById(data.videoId);
      })
      .catch(error => {
        console.error(error);
      });
  }
});

  async function onYouTubeIframeAPIReady () {
    

    var videoButtons = document.getElementsByClassName('video-button');
    for (var i = 0; i < videoButtons.length; i++) {
      videoButtons[i].addEventListener('click', handleButtonClick);
    }

    player = new YT.Player('player', {
      height: '360',
      width: '640',
      videoId: videoId,
      events: {
        'onReady': onPlayerReady,
        'onStateChange': onPlayerStateChange
      }
    });
  }
  function onPlayerReady(event) {

      event.target.mute();

      // $('#screenshotBtn').click(takeScreenshot);
      // $('#zoomInBtn').click(zoomIn);
      // $('#zoomOutBtn').click(zoomOut);
    }



    // Handle player state change events and emit the state to the server using Socket.IO
    function onPlayerStateChange(event) {
      var state;
      switch (event.data) {
        case YT.PlayerState.PLAYING:
          state = 'playing';
          break;
        case YT.PlayerState.PAUSED:
          state = 'paused';
          break;
        default:
          state = 'unknown';
      }
      socket.emit('playerStateChange', { state: state });
    }// Define the formatTime function
    function formatTime(time) {
      const minutes = Math.floor(time / 60);
      const seconds = Math.floor(time % 60);
      return `${minutes}:${seconds < 10 ? '0' : ''}${seconds}`;
    }


    async function getSessionUsername() {
      try {
        const response = await fetch(`https://starbase-tracking-tool.onrender.com/api/getSessionUsername`);
        const data = await response.json();
        const username = data.username;
        console.log('Session username retrieved:', username);
        return username;
      } catch (error) {
        console.error('Error retrieving session username:', error);
        return null;
      }
    }


    // Usage example
    getSessionUsername()
      .then((username) => {
        // Use the retrieved username here
        console.log(username);
      })
      .catch((error) => {
        console.error('Error retrieving session username:', error);
      });
    // When the user submits the form
    // When the user submits the form
    // When the user submits the form// When the user submits the form

    const cranForm = document.getElementById('form1');
    cranForm.addEventListener('submit', async (e) => {
      e.preventDefault(); // prevent the default form submission behavior

      // Get the form data
      const formData = new FormData(e.target);
      const selectedLocations = formData.getAll('selectLocation1');
      const reference = formData.get('reference');
      const payload = formData.get('payload');

      const destination = formData.get('destination');
      const timedate = formData.get('timedate');

      // Define the IDs for each selected location
      const locationIds = {
        'Launch Site': '6463c7a53891bb7657896097',
        'Production Site': '6463c7a1eea8aa72b220e2b4',
        "Massey's": '6463c7ab54ea793ebdf38087',
        'Sanchez': '6463c7b1cda50c8450a81fe8'
      };

      // Retrieve the username from the session
      try {
        const username = await getSessionUsername();
        console.log(username);

        // Emit the form data to the server for each selected location
        selectedLocations.forEach(async (selectedLocation) => {
          const id = locationIds[selectedLocation];
          socket.emit('formSubmit', { id, selectedLocation, reference, payload, username, timedate, destination });

          // Send POST requests to the three routes concurrently for each selected location
          const apiResponse = await fetch(`/api/${selectedLocation}/${videoId}/${username}`, {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify({ id, selectedLocation, reference, payload, username, timedate, destination })
          });

          const pipedreamResponse = await fetch('https://eo2pshurlnq4obv.m.pipedream.net', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify({ id, selectedLocation, reference, payload, username, timedate, destination })
          });

          const cardResponse = await fetch('/api/create-card', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify({ id, selectedLocation, reference, payload, timedate, destination })
          });


          // Wait for all three requests to complete for each selected location
          const [apiData, pipedreamData, cardData] = await Promise.all([
            Promise.resolve(apiResponse).then(res => res.json()),
            Promise.resolve(pipedreamResponse).then(res => res.json()),
            Promise.resolve(cardResponse).then(res => res.json())
          ]);


          // Handle the responses for each selected location
          createTrelloCard(cardData);
          console.log(`API Response for ${selectedLocation}:`, apiData);
          console.log(`Pipedream Response for ${selectedLocation}:`, pipedreamData);
        });
      } catch (error) {
        console.error(error);
      }

      // Clear the form fields
      cranForm.reset();
    });



    
    const spmtForm = document.getElementById('form2');
    spmtForm.addEventListener('submit', async (e) => {
      e.preventDefault(); // prevent the default form submission behavior

      // Get the form data
      const formData = new FormData(e.target);
      const selectedLocations = formData.getAll('selectLocation');
      const reference = formData.get('Reference-input');
      const payload = formData.get('Payload-input');

      const destination = formData.get('Destination-input');
      const timedate = formData.get('TimeDate-input');

      // Define the IDs for each selected location
      const locationIds = {
        'Launch Site': '6463c7a53891bb7657896097',
        'Production Site': '6463c7a1eea8aa72b220e2b4',
        "Massey's": '6463c7ab54ea793ebdf38087',
        'Sanchez': '6463c7b1cda50c8450a81fe8'
      };

      // Retrieve the username from the session
      try {
        const username = await getSessionUsername();
        console.log(username);

        // Emit the form data to the server for each selected location
        selectedLocations.forEach(async (selectedLocation) => {
          const id = locationIds[selectedLocation];
          socket.emit('formSubmit', { id, selectedLocation, reference, payload, username, timedate, destination });

          // Send POST requests to the three routes concurrently for each selected location
          const apiResponse = await fetch(`/api/${selectedLocation}/${videoId}/${username}`, {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify({ id, selectedLocation, reference, payload, username, timedate, destination })
          });

          const pipedreamResponse = await fetch('https://eoall44frtd3und.m.pipedream.net', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify({ id, selectedLocation, reference, payload, username, timedate, destination })
          });

          const cardResponse = await fetch('/api/create-card', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify({ id, selectedLocation, reference, payload, timedate, destination })
          });


          // Wait for all three requests to complete for each selected location
          const [apiData, pipedreamData, cardData] = await Promise.all([
            Promise.resolve(apiResponse).then(res => res.json()),
            Promise.resolve(pipedreamResponse).then(res => res.json()),
            Promise.resolve(cardResponse).then(res => res.json())
          ]);


          // Handle the responses for each selected location
          createTrelloCard(cardData);
          console.log(`API Response for ${selectedLocation}:`, apiData);
          console.log(`Pipedream Response for ${selectedLocation}:`, pipedreamData);
        });
      } catch (error) {
        console.error(error);
      }

      // Clear the form fields
      spmtForm.reset();
    });

    // create function getLocation fetch the endpoint
    function getLocation() {
      select.addEventListener('change', (event) => {
        const location = event.target.value;
        fetch(`/api/location/:${location}`, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({ location })
        })
          .then(response => response.json())
          .then(data => console.log(data))
          .catch(error => console.error(error));
      });

      console.log(location, body);
    }

    const select = document.getElementById('selectLocation1'); // Replace 'selectLocation' with the actual ID of your select element

    select.addEventListener('change', (event) => {
      const location = event.target.value;
      const data = {
        location: location,
      };
      socket.emit('location', data);
      console.log(location);
    });

// Initialize count values for each component
var componentCounts = {
  structuralColumns: 0,
  beams: 0,
  exteriorRidges: 0,
  claddingSupports: 0,
  claddingPanels: 0,
  flooringSystems: 0,
  roofingSystem: 0,
  hvacSystems: 0,
  electricalSystems: 0,
  plumbingSystems: 0,
  fireProtectionSystems: 0,
  elevatorsEscalators: 0
};

// Function to increment the count of a component
function incrementCount(componentName) {
  // Get the count element
  var countElement = document.getElementById(componentName + "Count");

  // Increment the count for the component
  componentCounts[componentName]++;

  // Update the count element text
  countElement.innerText = componentCounts[componentName];

  // Save the updated component counts to MongoDB
  saveDataToMongoDB();
}

// Function to save the data to MongoDB and retrieve it
async function saveDataToMongoDB() {
  const username = await getSessionUsername();

  try {
    // Send the component counts to the server
    const response = await fetch('/save-component-counts', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({ username, componentCounts })
    });

    if (response.ok) {
      console.log('Component counts saved successfully');
      // Retrieve the component counts from the server
      retrieveDataFromMongoDB(); // Call retrieveDataFromMongoDB after saving the data
    } else {
      console.error('Failed to save component counts:', response.status, response.statusText);
    }
  } catch (error) {
    console.error('An error occurred while saving component counts:', error);
  }
}

// Function to retrieve the component counts from MongoDB
async function retrieveDataFromMongoDB() {
  const username = await getSessionUsername();

  try {
    // Retrieve the component counts for the user
    const response = await fetch(`/get-component-counts?username=${username}`);

    if (response.ok) {
      const counts = await response.json();

      // Update the componentCounts object with retrieved counts
      componentCounts = { ...counts };

      // Process the retrieved component counts here
      // For example, populate a table with the data
      populateTable(counts);
    } else {
      console.error('Failed to retrieve component counts:', response.status, response.statusText);
    }
  } catch (error) {
    console.error('An error occurred while retrieving component counts:', error);
  }
}
async function populateTable(counts) {
  const username = await getSessionUsername();

  // Get the table body element
  var tableBody = document.getElementById("componentCountsBody");

  // Get the table footer element
  var tableFooter = document.getElementById("componentCountsFooter");

  // Clear the existing table content
  tableBody.innerHTML = '';
  tableFooter.innerHTML = '';

  // Exclude fields _id and __v
  var excludedFields = ['_id', '__v', 'username'];

  // Loop through the counts and create table rows
  for (var componentName in counts) {
    if (excludedFields.includes(componentName)) {
      continue;
    }

    var count = counts[componentName];

    // Create a new row
    var row = document.createElement("tr");

    // Create cells for component name and count
    var componentNameCell = document.createElement("td");
    var countCell = document.createElement("td");

    // Set the cell content
    componentNameCell.innerText = componentName;
    countCell.innerText = count;

    // Append cells to the row
    row.appendChild(componentNameCell);
    row.appendChild(countCell);

    // Append the row to the table body
    tableBody.appendChild(row);
  }

  // Create the username row
  var usernameRow = document.createElement("tr");

  // Create cells for the username row
  var usernameLabelCell = document.createElement("td");
  var usernameValueCell = document.createElement("td");

  // Set the cell content for the username row
  usernameLabelCell.innerText = "Username:";
  usernameValueCell.innerText = username;

  // Append cells to the username row
  usernameRow.appendChild(usernameLabelCell);
  usernameRow.appendChild(usernameValueCell);

  // Append the username row to the table footer
  tableFooter.appendChild(usernameRow);
}


// Function to handle form submission
function handleSubmit(event) {
  event.preventDefault(); // Prevent the default form submission

  // Perform any additional actions or validations here

  // Example: Display the component counts in the console
  console.log(componentCounts);

  // Call your function to save the data to MongoDB
  saveDataToMongoDB();
}

// Load the component counts from MongoDB on page load
window.addEventListener('DOMContentLoaded', retrieveDataFromMongoDB);

// Get the tracking form element
var trackingForm = document.getElementById("trackingForm");

// Attach the handleSubmit function to the form's submit event
trackingForm.addEventListener("submit", handleSubmit);


// Load the component counts from MongoDB on page load

// Listen for disconnect events and release control if necessary
// socket.on('disconnect', function() {
//   if (isController) {
//     isController = false;
//     clientId = null;
//     controlButton.innerText = 'Take Control';
//   }
// });

  </script>
  <script>


  </script>
    <script src="https://www.youtube.com/iframe_api"></script>

</body>

</html>
